<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>写作思考</title>
      <link href="/2019/12/16/xie-zuo-si-kao/"/>
      <url>/2019/12/16/xie-zuo-si-kao/</url>
      
        <content type="html"><![CDATA[<h1 id="写作思考"><a href="#写作思考" class="headerlink" title="写作思考"></a>写作思考</h1><p>开通这个wiki博客已经50天了，陆陆续续也写了十多篇文章了。自己感觉自己想要的目标：整理知识框架和常用文档——都有实现，但有一些不足，这里准备专门开一篇文章整理写作技巧，方便以后添补，也欢迎大家多提建议，不胜感激！</p><h2 id="常用文档"><a href="#常用文档" class="headerlink" title="常用文档"></a>常用文档</h2><p>这个是大多数网上博客的内容，包括软件安装配置、编程语法等，自己目前状态在搜索语法使用时都希望能快速找到一个例子上手，而不是大片大片的简介和各种使用方法以及参数，虽然也很重要。</p><h3 id="软件安装配置"><a href="#软件安装配置" class="headerlink" title="软件安装配置"></a>软件安装配置</h3><ol><li>注明引用网址，以备安装出错回去查</li><li>推荐给别人安装，来检验是否有错= =</li></ol><h3 id="编程语法"><a href="#编程语法" class="headerlink" title="编程语法"></a>编程语法</h3><ol><li>一定要有可实现例子！</li></ol><h2 id="知识整理"><a href="#知识整理" class="headerlink" title="知识整理"></a>知识整理</h2><p>知识根据性质可以分为常识和理论，这里常识指大家在日常生活中有的经历体会或者从别处知道的固态知识，随着年龄和阅历的增加而增加；理论则是对这些常识进行挖掘，深入本质探究内涵，是思维心智的成长。理论是深入，但是一定得有常识基础，不然只是空中楼阁，阅读的人也不知道在说什么。</p><h3 id="课程知识"><a href="#课程知识" class="headerlink" title="课程知识"></a>课程知识</h3><ol><li>思维导图理清脉络</li><li>列举实例帮助理解</li></ol><h2 id="读书笔记"><a href="#读书笔记" class="headerlink" title="读书笔记"></a>读书笔记</h2><p>根据《如何阅读一本书》的内容阅读，一定要读完再分享，时间不宜拖得太长</p><ol><li>架构性：一段话描述书的内容和思维导图</li><li>诠释性：相关语句重构整本书</li><li>评论性：写下自己感想</li></ol>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 写作 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《爱的沟通》</title>
      <link href="/2019/12/16/ai-de-gou-tong/"/>
      <url>/2019/12/16/ai-de-gou-tong/</url>
      
        <content type="html"><![CDATA[<h1 id="《爱的沟通》"><a href="#《爱的沟通》" class="headerlink" title="《爱的沟通》"></a>《爱的沟通》</h1><p>从小到大从来没有人教我们如何爱一个人，如果童年被父母老师同学爱过，定然也会知道如何去爱别人，但是爱情与亲情、友情等还是有所不同，需要专门的探索，但是千万不要走上PUA这种邪路，专门去学PUA最后可能就爱无能了，爱情中不存在“一招鲜吃遍天”的套路，所有女人都是独一无二的，就像人生需要用一生去探索。</p><p>这里我把读<a href="https://book.douban.com/subject/30248303//" target="_blank" rel="noopener">《爱的沟通》</a>时做的笔记与大家分享，希望对大家有所帮助。这是一本专门写给男性的实用型书（当然，女性看了也会更加了解自己），这些规则只是轮廓，具体需要自己慢慢探索去发现你爱的人。</p><ol><li><p>女人最看重的是信任感，安全感<br> a. 与进化论抚育孩子有关<br> b. 具体表现为：言出必行、表里如一，能够依靠、有责任感，并且能够如实地展示你自己。<br> c. 保护身心</p></li><li><p>男女都抱怨感到孤独，并希望更多的亲密关系，需要情绪协调（attune）<br> a. 女人最看重的特质是值得信任，</p><blockquote><p>信任是通过情感上的联结建立的，<br> 情感上的联结是通过情绪协调达到的；<br> 因此，情绪协调意味着信任。</p></blockquote><p> b. 怎么做——ATTUNE</p><blockquote><p>Attend关注：注意力集中<br> Turn toward转向：因为在女人心目中，亲密意味着四目相对。<br> Understand理解：多提问题，不要提供解决方案，不要分散注意力，不要开玩笑，更不要试图弱化这个问题的影响，要询问她此时此刻的感受以及这件事对她的意义。<br> Nondefensively listen非防御性倾听：多听少说，没人喜欢被批评<br> Empathize共情：当一个人感受到自己与他人联结，而非孤身一人的时候，她大脑中负责情绪处理的部分就会镇静下来。</p></blockquote><p> c. 除了情感上的安全，女人也需要生理上的安全。不要用声音个头恐吓女生，不要用蛮力</p></li><li><p>三种激素决定了女人每一天的生理心理活动：雌激素、孕酮和睾酮。<br> a. 在整个生理周期的头两周，雌激素水平会逐步上升，女性会更加友好、健谈，更加放松、镇静，但情绪上也会更加敏感。在生理周期的后两周，孕酮水平会逐渐上升，女性会变得更加易怒、更有压力、更不镇静，也会更想要独处。<br> b. 在月经期前一周，女性的孕酮水平下降，她们会更容 易变得情绪敏感、易怒、有压力或者伤感。应该运动、减少咖啡因摄入量、服用B族维生素或者草药<br> c. 激素对女性的性欲有极大的影响。当女人处在排卵期时，她更加偏好具有进攻性的男人； 当她处在非排卵期时，她更加偏好温和的男人。</p><img src="1.png" width="300/"></li><li><p>女人对恐惧的感受和男人完全不同。<br> a. 在高压之下，男性会变得不太害怕。与此相反，当女人感受到较高的压力时，她们会更加害怕，并且更有可能对未来产生恐惧。<br> b. 伴侣间的身体接触非常有效。即使只是简单的握手，也对稳定女性的情绪有非常大的作用；而更好的办法是，在一开始就帮助她避免恐惧。</p></li><li><p>非语言性小技巧<br> a. 女性最容易被脸部完全对称的男性所吸引<br> b. 成功者的特质之一是在社交场合占据最大化的空间。永远不要站着环抱双臂，也不要翘二郎腿，同性之间的身体触碰也可以体现一个男人的社交主导性。<br> c. 保持镇静是男人吸引女人的另一项进化优势</p></li><li><p>非语言性信号<br> a. 可接近<br> i. 直接的眼神接触、微笑或者目光反复地看向你又飞快地闪开<br> ii. 和男士不经意地擦身而过，飞速地用身体碰触一下男性<br> b. 不可接近<br> i. 始终和朋友说话</p></li><li><p>女人会对有强烈情绪能量的男人印象深刻。这种男人对他所谈论的事情充满热忱，非常善于提问，并且认真倾听回答。</p></li><li><p>信息素可以使男女相互吸引或者排斥，尤其是女性对气味非常敏感</p></li><li><p>生理的愉悦产生催产素导致人非理性判断</p></li><li><p>童年印记影响伴侣选择</p></li><li><p>你必须反复告诉你的女人，你对她的身体是多么着迷</p></li><li><p>女人的愤怒来源可以分为三类：感到无能为力、感到不公，以及感到他人的不负责任。 </p></li><li><p>如果你使用了批评、污蔑、防卫或沉默抵制等任何一种方法升级了矛盾，那你就有81%的可能性会走向结束婚姻的道路。</p></li><li><p>成功的男人有3个简单却有效的方法来降低心率、处理情绪。第一是深呼吸。第二是从1数到10。第三个策略，就是休息一下。</p></li><li><p>聪明的男人会通过询问以下三个问题，来找出女人的痛苦到底在哪里：你需要什么？你担心什么？你的感受如何？</p></li><li><p>女性逛街的意义：<br>a. 原始女性负责采集，细节记忆力特别好，社会性事业；男人负责狩猎，目标型。<br>b. 打扮自己，如果自己长得不好看，就无法获得男人的爱情和承诺，潜意识担忧无法传播和繁衍自己的基因（高跟鞋能使女人拱起背部，撅起臀部。在动物世界里，这意味着雌性已经准备好性交了）</p></li><li><p>如果你想要活得更长一些，请维系好你和伴侣之间的关系。 如果你希望你的伴侣活得更长久一些，请鼓励她好好维系与闺蜜的友谊。</p></li><li><p>当面对压力时，男性会采取战斗／逃跑模式，而女性则会采取“关爱与协助”模式</p></li><li><p>男人爱女人的一个重要方式就是，支持她成为一个母亲，爱护并养育她的孩子。</p></li><li><p>母亲是孩子的老师，而父亲则是导游。婴儿既需要老师，也需要导游。<br>a. 父亲玩耍的方式对子女的智力成长和社会功能 的发展都有积极的作用。最佳的预测因素是这些人在5岁的时候，其父亲介入小孩成长的程度。父亲介入小孩成长的程度越高，孩子 长大以后的共情水平就越高。<br>b. 那些 曾经在童年时期感受到更多父亲关爱的孩子们，在中年时的社会关系， 如婚姻、孩子和社会交往的表现上更为良好<br>c. 与父亲互动更多的孩子，其语文测试成绩更高。<br>d. 那些在社会交往和学习成绩上存在双重障碍的孩子，他们的父亲通常都比较冷酷、专制、烦人，而且也更喜欢贬低他人。 </p></li><li><p>永远不要停止和她约会；永远不要停止了解她；永远不要停止联络她。</p></li><li><p>保证爱情长久的方法：</p><blockquote><p>a. 6秒钟的吻：6秒钟后，催产素会大量分泌，恐惧会减少，此时信任才会建立起 来<br>b. 和她约会：你要为此感到兴奋，还要安排去一些从来没有去 过的地方，尝试新的活动，让浪漫成为她的一个习惯<br>c. 了解她：以多问一些开放式的问题<br>d. 感谢她：每一天，你都要找到一些事情赞美她，并表达你的感谢。<br>e. 尊重她的梦想：她们的生活梦想是应对极端压力、失望和 挫折的力量源泉</p></blockquote></li></ol>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 两性关系 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>密度泛函理论与应用</title>
      <link href="/2019/11/30/mi-du-fan-han-li-lun-yu-ying-yong/"/>
      <url>/2019/11/30/mi-du-fan-han-li-lun-yu-ying-yong/</url>
      
        <content type="html"><![CDATA[<h1 id="密度泛函理论与应用"><a href="#密度泛函理论与应用" class="headerlink" title="密度泛函理论与应用"></a>密度泛函理论与应用</h1><p>这里先放一张课程的思维导图，考完试后再详细些一点东西。</p><h2 id="总览"><a href="#总览" class="headerlink" title="总览"></a>总览</h2><p><img src="%E5%AF%86%E5%BA%A6%E6%B3%9B%E5%87%BD%E7%90%86%E8%AE%BA%E4%B8%8E%E5%BA%94%E7%94%A8.png" alt></p><h2 id="思考与讨论"><a href="#思考与讨论" class="headerlink" title="思考与讨论"></a>思考与讨论</h2><ol><li><p><strong>Hartree 近似是如何求解多电子系统薛定谔方程？</strong></p><ul><li>Hartree 近似采用平均场方法把多电子系统薛定谔方程转化为N个单电子系统薛定谔方程，多电子波函数则是单电子波函数的乘积。</li></ul></li><li><p><strong>Hartree-Fock 近似在哪些方面做了改进？</strong> </p><ul><li>Hartree-Fock 近似在 Hartree 近似的基础上，考虑电子存在交换反对称的特性，多电子波函数表示成单电子波函数的 行列式，也不再是N个单电子方程组成的联立方程组。 </li></ul></li><li><p><strong>在Hartree-Fock 近似下电子轨道能量代表什么物理意义？</strong></p><ul><li>电子轨道能量代表电子离化能；电子轨道能量会重复计算电子之间的相互作用，电子轨道能量之和不等于多电子系 统的HF总能量。</li></ul></li><li><p><strong>电子的库伦能、交换能和关联能的来源的什么？</strong> </p><ul><li>库伦能、交换能和关联能都是来自电子之间的库伦相互作用</li><li>库伦能是把电子之间的库伦相互作用简化成一个平均场来代替。多电子的薛定谔方程可以分离变量，变成N个单电子方程；多电子的波函数是单电子波函数的乘积。</li><li>交换能是在前面的平均场基础上，考虑电子的交换反对称特性。 多电子的波函数写成单电子波函数的行列式。</li><li>关联能是使用平均场替代电子之间的库伦相互作用所造成的误差。 单电子波函数的行列式并不是多电子系统的精确解。 </li></ul></li><li><p><strong>密度泛函理论是从 TFD 理论发展起来的，为什么TFD 理论没有得到广泛应用？密度泛函理论与之相比在什么地方进行改进？</strong></p><ul><li>TFD 理论提出总能量是电子密度的泛函，但是其中电 子动能项的密度泛函形式过于简单，导致计算误差较大。这是 TFD 理论没有得到广泛应用最主要的原因。 </li><li>DFT 理论不是使用电子密度，而是使用电子波函数来 计算动能项。这种方法计算精度高，避免动能项没有 精确泛函的问题，同时把动能项和电子间库伦相互作 用的误差都放在交换关联势中，这部分能量占比较小。 </li></ul></li><li><p><strong>DFT 理论的基础是什么？为什么说 DFT 理论是精确的，但无法实际使用？</strong></p><ul><li>DFT 理论的基础是 HK 定理，其给出两个结论：所有 可观察量都是密度的泛函；总能量对密度的变分极小 就是体系的基态。  </li><li>HK 定理已经被精确证明，证明过程没有任何近似。所 以 DFT 理论本身是精确的，只是其中只有外势项的密 度泛函表达式是精确已知的；动能项及电子-电子相互 作用项没有精确的密度泛函表达式。  </li></ul></li><li><p><strong>Kohn 和 Sham 在 HK 定理的基础上做了什么改进？KS 方程中的交换关联包含哪些部分？</strong></p><ul><li>Kohn 和 Sham 提出用一个无相互作用的参考电子系统来代替有相互作用的多电子系统。假定无相互作用的参考电子系统与相互作用的多电子系统有相同的基态电子密度，通过求解参考电子系统，得到真实的多电子系统的基态能量和基态电荷密度。</li><li>在 KS 方程中参考电子系统的动能泛函是可以求解出来的，库伦相互作用可以使用平均场近似，其它误差 都放在交换关联中，其中包含交换能、关联能、电子动能的误差以及库伦势的自相互作用修正。</li></ul></li><li><p><strong>赝势方法的理论基础是什么？</strong></p><ul><li>根据实验数据总结，材料的特性只跟价电子相关， 芯电子受不同环境的影响非常小，基本上局域在原子核周围。 </li></ul></li><li><p><strong>赝势方法解决什么问题？常用的赝势方法有哪些？</strong></p><ul><li>赝势方法把多电子系统被划分为芯电子系统与价电子系统，其中芯电子受外界影响非常小，可以等价成一个势场。 常用的赝势方法有模守恒赝（NCPP）、超软赝势 （USPP）、投影扩张波赝势（PAW）</li></ul></li><li><p><strong>构造模守恒赝势时需要满足的4个条件？</strong></p><ul><li>赝波函数没有径向节点</li><li>在截断半径外，赝波函数与全电子波函数要相同</li><li>在截断半径内，两种波函数给出的总电荷要相同</li><li>赝波函数与全电子波函数要有相同的本征值 </li></ul></li><li><p><strong>为什么在赝势方法中需要核修正？</strong></p><ul><li>因为交换关联势是非线性的，所以计算价电子感受到 的交换关联势需要加入核电子的贡献。</li></ul></li><li><p><strong>在动量空间中，总能量和 KS 方程中都包含发散项，这些放散项在电中性的情况下都互相抵消。在实际研究过程中如果需要 模拟带电系统，需要如何处理？</strong></p><ul><li>最简单的处理方法就是增加补充电荷，让整个系 统处于电中性状态。补充电荷应该均匀分布在整个模拟空间，这样才不会产生额外的电场分布来改变真实系统的电场分布。 </li></ul></li><li><p><strong>如果按照下图K点抽样，考虑对称性后， 还剩下几个K点，每个K点权重？</strong><br><img src="1.png" alt></p></li><li><p><strong>原子受力是如何计算的？得到原子受力有什么用处？</strong></p><ul><li>通过总能泛函对原子坐标的微分可以得到原子受力。得到原子受力可以用于结构优化和分子动力学模拟。</li></ul></li><li><p><strong>简述 Born-Oppenheimer 分子动力学和 Car-Parrinello 分子动力学之间的差异</strong></p><ul><li>Born-Oppenheimer 分子动力学是每步动力学演化都 需要通过自洽计算得到原子受力，电子始终存于基</li><li>Car-Parrinello分子动力学是把电子波函数和原子坐标一起演化，不需要每步动力学演化都通过自洽计 算得到原子受力，电子不是处于严格的基态。 </li></ul></li><li><p><strong>简述 APW 和 PW 之间的区别？</strong></p><ul><li>PW是电子在真空中的本征波函数，可以很好地描述近自由电子， 与能量无关。APW则是把全空间区域分成两部分：靠近原子核 区域和间隙区域，在间隙区域使用平面波描述，在靠近原子核 区域使用原子轨道描述，与能量相关。 </li></ul></li><li><p><strong>简述 LAPW 对 APW 做了什么改进？</strong></p><ul><li>虽然APW基函数可以描述电子在不同区域的特征，但是其于能量相关，在计算过程中需要额外增加一个循环去寻找本征能量， 计算量非常大。</li><li>LAPW是在APW的基础上进行线性展开，可以使用给定的一个能量值及其微分值来近似描述不同能量的基函数，不需要增加寻找本征能量的过程。 </li></ul></li><li><p><strong>原子轨道的一般形式是什么？常用的原子轨道有哪些？</strong></p><ul><li>原子轨道的一般形式是径向波函数乘以角向球谐函数。 常用的原子轨道有 STO、 GTO 和 NAO。</li></ul></li><li><p><strong>高斯型轨道（GTO）积分为什么可以解析求解？</strong></p><ul><li>因为 GTO 具有加法特性，多中心的高斯函数乘积可以转化为单 中心的高斯函数，而单中心的高斯函数积分是可以解析求解的。 所以高斯型轨道对哈密顿量的积分可以解析求解。 </li></ul></li><li><p><strong>中性原子势的来源是什么？为什么是短程作用？</strong></p><ul><li>中性原子势是局域赝势和参考电荷共同作用下的势场，在电中性的情况下把长程库伦相互作用的发散项相抵消。因为在截断半径之外总电荷为零，所以势场在截断半径之外也为零。</li></ul></li><li><p><strong>总能量中短程项的来源是什么?</strong></p><ul><li>短程项是原子核之间的相互作用能减去参考电荷之间的相互作用能，在电中性的情况下把长程库伦相互作用的发散项相抵消。 </li></ul></li><li><p><strong>Order-N 方法的物理基础是什么？</strong></p><ul><li>Order-N方法的物理基础是密度矩阵的局域性。也就是说系统电荷密度的分布只依赖电荷周围的影响，远处的电荷对其影响可以忽略不计。 </li></ul></li><li><p><strong>Order-N 方法的适用范围有哪些？</strong></p><ul><li>Order-N方法适用于系统总能量相关的物理特性，例如总能量、 电荷密度、原子受力等等。而跟系统波函数相关的物理特性是没法求解的。 </li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> 物理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DFT </tag>
            
            <tag> 密度泛函理论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python绘图</title>
      <link href="/2019/11/25/python-hui-tu/"/>
      <url>/2019/11/25/python-hui-tu/</url>
      
        <content type="html"><![CDATA[<h1 id="Python绘图"><a href="#Python绘图" class="headerlink" title="Python绘图"></a>Python绘图</h1><p>直接看<a href="https://wklchris.github.io/Py3-matplotlib.html#%E5%9F%BA%E7%A1%80%E7%BB%98%E5%9B%BEpltplot" target="_blank" rel="noopener">Python科学计算：matplotlib</a>吧…这里记录一些经常用到的命令。</p><p>首先导入包</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="绘图样式"><a href="#绘图样式" class="headerlink" title="绘图样式"></a>绘图样式</h2><pre class="line-numbers language-python"><code class="language-python">x <span class="token operator">=</span> np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span>y1 <span class="token operator">=</span> x <span class="token operator">**</span> <span class="token number">2</span>y2 <span class="token operator">=</span> <span class="token number">2</span> <span class="token operator">*</span> x <span class="token operator">+</span> <span class="token number">3</span>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y1<span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">"b"</span><span class="token punctuation">,</span> linestyle<span class="token operator">=</span><span class="token string">":"</span><span class="token punctuation">,</span> linewidth<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span> dashes<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true"># 线的属性</span>         marker<span class="token operator">=</span><span class="token string">"d"</span><span class="token punctuation">,</span> ms<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span> mew<span class="token operator">=</span><span class="token number">1.5</span><span class="token punctuation">,</span> mec<span class="token operator">=</span><span class="token string">"g"</span><span class="token punctuation">,</span> mfc<span class="token operator">=</span><span class="token string">"w"</span><span class="token punctuation">,</span>                <span class="token comment" spellcheck="true"># 点的属性</span>         markevery<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y2<span class="token punctuation">,</span> <span class="token string">"#bf242a"</span><span class="token punctuation">,</span> ls<span class="token operator">=</span><span class="token string">"-"</span><span class="token punctuation">,</span> lw<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="坐标轴标签，标题"><a href="#坐标轴标签，标题" class="headerlink" title="坐标轴标签，标题"></a>坐标轴标签，标题</h2><pre class="line-numbers language-python"><code class="language-python">plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'title'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">'X'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">'y'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="对数坐标轴"><a href="#对数坐标轴" class="headerlink" title="对数坐标轴"></a>对数坐标轴</h2><pre class="line-numbers language-python"><code class="language-python">plt<span class="token punctuation">.</span>semilogy<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span>plt<span class="token punctuation">.</span>semilogx<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span>plt<span class="token punctuation">.</span>loglog<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 编程语法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> matplotlib </tag>
            
            <tag> 绘图 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Latex常用语法</title>
      <link href="/2019/11/11/latex-chang-yong-yu-fa/"/>
      <url>/2019/11/11/latex-chang-yong-yu-fa/</url>
      
        <content type="html"><![CDATA[<h1 id="Latex常用语法"><a href="#Latex常用语法" class="headerlink" title="Latex常用语法"></a>Latex常用语法</h1><h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><p>单个</p><pre class="line-numbers language-latex"><code class="language-latex"><span class="token function selector">\usepackage</span><span class="token punctuation">{</span><span class="token keyword">float</span><span class="token punctuation">}</span> <span class="token function selector">\begin</span><span class="token punctuation">{</span><span class="token keyword">figure</span><span class="token punctuation">}</span><span class="token punctuation">[</span>H<span class="token punctuation">]</span> <span class="token comment" spellcheck="true">%H为当前位置，!htb为忽略美学标准，htbp为浮动图形</span>    <span class="token function selector">\centering</span> <span class="token comment" spellcheck="true">%图片居中</span>    <span class="token function selector">\includegraphics</span><span class="token punctuation">[</span>width=0.3<span class="token function selector">\textwidth</span><span class="token punctuation">]</span><span class="token punctuation">{</span>picture/Germanene_cell.png<span class="token punctuation">}</span> <span class="token comment" spellcheck="true">%插入图片，[]中设置图片大小，{}中是图片文件名</span>    <span class="token function selector">\caption</span><span class="token punctuation">{</span>锗烯的晶胞<span class="token punctuation">}</span> <span class="token comment" spellcheck="true">%最终文档中希望显示的图片标题</span>    <span class="token function selector">\label</span><span class="token punctuation">{</span><span class="token keyword">fig:锗烯的晶胞</span><span class="token punctuation">}</span> <span class="token comment" spellcheck="true">%用于文内引用的标签</span><span class="token function selector">\end</span><span class="token punctuation">{</span><span class="token keyword">figure</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>并排</p><pre class="line-numbers language-latex"><code class="language-latex"><span class="token function selector">\usepackage</span><span class="token punctuation">{</span><span class="token keyword">float</span><span class="token punctuation">}</span> <span class="token function selector">\usepackage</span><span class="token punctuation">{</span><span class="token keyword">subfigure</span><span class="token punctuation">}</span><span class="token function selector">\begin</span><span class="token punctuation">{</span><span class="token keyword">figure</span><span class="token punctuation">}</span><span class="token punctuation">[</span>H<span class="token punctuation">]</span>    <span class="token function selector">\centering</span>  <span class="token comment" spellcheck="true">%图片全局居中</span>    <span class="token function selector">\subfigure</span><span class="token punctuation">[</span>name1<span class="token punctuation">]</span><span class="token punctuation">{</span>        <span class="token function selector">\includegraphics</span><span class="token punctuation">[</span>width=0.45<span class="token function selector">\textwidth</span><span class="token punctuation">]</span><span class="token punctuation">{</span>DV_demand<span class="token punctuation">}</span>        <span class="token function selector">\label</span><span class="token punctuation">{</span><span class="token keyword">Fig.sub.1</span><span class="token punctuation">}</span><span class="token punctuation">}</span>    <span class="token function selector">\subfigure</span><span class="token punctuation">[</span>name2<span class="token punctuation">]</span><span class="token punctuation">{</span>        <span class="token function selector">\includegraphics</span><span class="token punctuation">[</span>width=0.45<span class="token function selector">\textwidth</span><span class="token punctuation">]</span><span class="token punctuation">{</span>P+R_demand<span class="token punctuation">}</span>        <span class="token function selector">\label</span><span class="token punctuation">{</span><span class="token keyword">Fig.sub.2</span><span class="token punctuation">}</span><span class="token punctuation">}</span>    <span class="token function selector">\caption</span><span class="token punctuation">{</span>Main name<span class="token punctuation">}</span>    <span class="token function selector">\label</span><span class="token punctuation">{</span><span class="token keyword">Fig.main</span><span class="token punctuation">}</span><span class="token function selector">\end</span><span class="token punctuation">{</span><span class="token keyword">figure</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><p>可以用<code>Excel</code>制作好直接复制到<a href="http://www.tablesgenerator.com/latex_tables" target="_blank" rel="noopener">在线网站</a>直接生成。</p><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><code>file.tex</code>中加入下面代码：</p><pre class="line-numbers language-latex"><code class="language-latex"><span class="token function selector">\bibliographystyle</span><span class="token punctuation">{</span>plain<span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">% 标准plain unsrt alpha abbrv</span><span class="token function selector">\bibliography</span><span class="token punctuation">{</span>file.bib<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><code>file.bib</code>中加入参考文献，可以用<a href="https://scholar.google.com/" target="_blank" rel="noopener">谷歌学术</a>或者<a href="https://ui.adsabs.harvard.edu/#" target="_blank" rel="noopener">哈佛数据库</a><br><img src="1.png" alt></p><pre class="line-numbers language-latex"><code class="language-latex">@article<span class="token punctuation">{</span>ren2018tunable,  title=<span class="token punctuation">{</span>Tunable electronic and topological properties of germanene by functional group modification<span class="token punctuation">}</span>,  author=<span class="token punctuation">{</span>Ren, Ceng-Ceng and Zhang, Shu-Feng and Ji, Wei-Xiao and Zhang, Chang-Wen and Li, Ping and Wang, Pei-Ji<span class="token punctuation">}</span>,  journal=<span class="token punctuation">{</span>Nanomaterials<span class="token punctuation">}</span>,  volume=<span class="token punctuation">{</span>8<span class="token punctuation">}</span>,  number=<span class="token punctuation">{</span>3<span class="token punctuation">}</span>,  pages=<span class="token punctuation">{</span>145<span class="token punctuation">}</span>,  year=<span class="token punctuation">{</span>2018<span class="token punctuation">}</span>,  publisher=<span class="token punctuation">{</span>Multidisciplinary Digital Publishing Institute<span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>通过<code>\cite{}</code>引用</p>]]></content>
      
      
      <categories>
          
          <category> 编程语法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Latex </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux常用命令</title>
      <link href="/2019/11/07/linux-chang-yong-ming-ling/"/>
      <url>/2019/11/07/linux-chang-yong-ming-ling/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux常用命令"><a href="#Linux常用命令" class="headerlink" title="Linux常用命令"></a>Linux常用命令</h1><h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><pre class="line-numbers language-linux"><code class="language-linux">cd ..                                    # 返回上一层mkmir file                               # 新建文件夹rm file                                  # 删除文件cp file newfile                          # 复制<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="安装卸载软件"><a href="#安装卸载软件" class="headerlink" title="安装卸载软件"></a>安装卸载软件</h2><pre class="line-numbers language-linux"><code class="language-linux">dpkg --list                              # 软件列表sudo apt update                          # 刷新存储库索引sudo apt upgrade                         # 升级所有可升级的软件包sudo apt install                         # 安装软件sudo apt --purge remove <programname>    # 完全移除<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="权限管理"><a href="#权限管理" class="headerlink" title="权限管理"></a>权限管理</h2><pre><code>sudo chmod -R 777 myResources            # 遇到Permission denieddos2unix file                            # 把文件转化为Linux格式                       chmod u+x file.sh                        # 对当前目录下的file.sh文件的所有者增加可执行权限ulimit -a                                # 内存限制</code></pre>]]></content>
      
      
      <categories>
          
          <category> 编程语法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VASP文件参数和常用命令</title>
      <link href="/2019/11/06/vasp-wen-jian-can-shu-he-chang-yong-ming-ling/"/>
      <url>/2019/11/06/vasp-wen-jian-can-shu-he-chang-yong-ming-ling/</url>
      
        <content type="html"><![CDATA[<h1 id="VASP文件参数和常用命令"><a href="#VASP文件参数和常用命令" class="headerlink" title="VASP文件参数和常用命令"></a>VASP文件参数和常用命令</h1><h2 id="文件参数"><a href="#文件参数" class="headerlink" title="文件参数"></a>文件参数</h2><h3 id="INCAR"><a href="#INCAR" class="headerlink" title="INCAR"></a>INCAR</h3><p>INCAR主要是告诉VASP我们要算什么以及计算的细节</p><pre class="line-numbers language-vasp"><code class="language-vasp">SYSTEM = H2O          # 计算的体系，随意写ISMEAR = 0            # K点数目<4 取0；K点数目>4 取-5；金属 取1，2SIGMA = 0.01          # 对于分子或者原子，用0.01，默认0.2，取小会收敛变慢ISPIN = 2             # 考虑$\alpha$和$\beta$电子，即磁性MAGMOM = 2*2 1*2      # 磁矩ISYM = 0              # 不考虑对称性ALGO = Normal         # 电子迭代算法 FAST Damped 或 ALLEDIFF = 1E-4          # 电子步收敛判据ENCUT = 300           # 截断能量NELM = 60             # 电子步数ISIF = 3              # 2晶胞形状不变化；3变化IBRION = 2            # 离子步迭代算法conjugate gradient algorithmPOTIM = 0.1           # 离子步 步长NSW = 10              # 离子步 步数EDIFFG = 1E-3         # 离子步收敛判据——力判据<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="KPOINTS"><a href="#KPOINTS" class="headerlink" title="KPOINTS"></a>KPOINTS</h3><pre class="line-numbers language-vasp"><code class="language-vasp">K-POINTS       # 随意写0              # 自动生成K点G              # G Gamma点中心 | M Monkhorst-Pack 方法 1 1 1          # 在xyz三个方向上生成对应数目的K点0 0 0          # 一般静态模拟0 0 0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>脚本</p><pre class="line-numbers language-linux"><code class="language-linux">#! /usr/bin/env bash# To generate KPOINT file# Written by Xingyu on 2019-11-8# To use it: kpoints.sh 3 3 1echo K-POINTS > KPOINTSecho 0 >> KPOINTSecho Gamma-Centered >> KPOINTSecho $1 $2 $3 >> KPOINTSecho 0 0 0 >> KPOINTS<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><h3 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h3><p>复制文件</p><pre class="line-numbers language-linux"><code class="language-linux">cp file1 file2 -r    # 把文件夹file1复制为file2<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>修改文件</p><pre class="line-numbers language-linux"><code class="language-linux">sed -i '$aENCUT = 400' INCAR   #在INCAR最后一行添加ENCUT = 400sed -i "s/400/500/g"  500/INCAR ; #把500文件夹中INCAR中的400改为500<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>查看文件</p><pre class="line-numbers language-linux"><code class="language-linux">cat INCAR -n    #查看INCAR文件显示行数<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="赝势"><a href="#赝势" class="headerlink" title="赝势"></a>赝势</h3><pre class="line-numbers language-linux"><code class="language-linux">potcar H O                   # 合成赝势 cat POTCAR-O POTCAR-H > POTCARpos2pot                      # 按照POSCAR生成POTCAR potcar.sh  $(sed -n 6p POSCAR)"gt                           # 查看元素 grep TIT POTCAR  grep ENMAX POTCAR            # 查看截断能量<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="离子步"><a href="#离子步" class="headerlink" title="离子步"></a>离子步</h3><pre class="line-numbers language-linux"><code class="language-linux">gr       # 查看离子步是否收敛 grep 'reached required accuracy' OUTCAR<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="能量"><a href="#能量" class="headerlink" title="能量"></a>能量</h3><pre class="line-numbers language-linux"><code class="language-linux">ge       # 查看能量 grep 'without' OUTCAR<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="时间内存"><a href="#时间内存" class="headerlink" title="时间内存"></a>时间内存</h3><pre class="line-numbers language-linux"><code class="language-linux">tail OUTCAR           # 所有信息grep User OUTCAR      # 时间信息<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="批量操作"><a href="#批量操作" class="headerlink" title="批量操作"></a>批量操作</h3><blockquote><p>以下所有操作<code>cp</code>都自定义为<code>cp -r</code></p></blockquote><p>ENCAR</p><pre class="line-numbers language-linux"><code class="language-linux">for i in {1..8}; do cp 400 $((400+$i*50)); sed -i "s/400/$((400+$i*50))/g"  $((400+$i*50))/INCAR ; done       # 制作不同INCAR参数文件for i in *0; do cd $i ; mpirun -np 2 vasp_std; cd $OLDPWD; done  # 提交任务for i in *0; do echo -e $i, $(grep User $i/OUTCAR | awk '{print $4}') , $(grep ' without' $i/OUTCAR | tail -n 1 | awk '{print $4}'); done > ENCUT.dat  # 打印时间和能量的第四个信息，并转化为data.dat<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>EDIFF</p><pre class="line-numbers language-linux"><code class="language-linux">for i in {2..6}; do cp 1 $i; sed -i "6s/-1/$((-$i))/g" $i/INCAR ; done       # 制作不同INCAR参数文件for i in *; do cd $i ; mpirun -np 2 vasp_std; cd $OLDPWD; done  # 提交任务for i in *; do echo -e $i, $(grep User $i/OUTCAR | awk '{print $4}') , $(grep ' without' $i/OUTCAR | tail -n 1 | awk '{print $4}'); done > EDIFF.dat  # 打印时间和能量的第四个信息，并转化为data.dat<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>KPOINTS</p><pre class="line-numbers language-linux"><code class="language-linux">for i in {2..6}; do cp 111 ${i}${i}${i}; sed -i "4s/1 1 1/$i $i $i/g" ${i}${i}${i}/KPOINTS ; done        # 制作不同KPOINTS参数文件for i in {4..6}; do sed -i "2s/0/-5/g" ${i}${i}${i}/INCAR ; done                                       # 修改ISMEAR参数for i in {1..6}; do cd ${i}${i}${i} ; mpirun -np 2 vasp_std; cd $OLDPWD; done  # 提交任务for i in {1..6}; do echo -e $i, $(grep User ${i}${i}${i}/OUTCAR | awk '{print $4}') , $(grep ' without' ${i}${i}${i}/OUTCAR | tail -n 1 | awk '{print $4}'); done > KPOINTS.dat  # 打印时间和能量的第四个信息，并转化为data.dat<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>Lattice Parameter</p><pre class="line-numbers language-linux"><code class="language-linux">for i in 0.95 0.96 0.97 0.98 0.99 1.01 1.02 1.03 1.04 1.05; do cp 1.00 $i ; sed -i "2s/1.0/$i/g" $i/POSCAR ; done        # 制作不同POSCAR参数文件for i in *; do cd $i ; mpirun -np 2 vasp_std; cd $OLDPWD; done  # 提交任务                                    # 修改ISMEAR参数for i in 0.95 0.96 0.97 0.98 0.99 1.00 1.01 1.02 1.03 1.04 1.05; do echo -e $i, $(grep User $i/OUTCAR | awk '{print $4}') , $(grep ' without' $i/OUTCAR | tail -n 1 | awk '{print $4}'); done > Lattice_Parameter.dat  # 打印时间和能量的第四个信息，并转化为data.dat<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 编程语法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VASP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VASP在w10系统下安装</title>
      <link href="/2019/11/04/vasp-zai-w10-xi-tong-xia-an-zhuang/"/>
      <url>/2019/11/04/vasp-zai-w10-xi-tong-xia-an-zhuang/</url>
      
        <content type="html"><![CDATA[<h1 id="VASP在w10系统下安装"><a href="#VASP在w10系统下安装" class="headerlink" title="VASP在w10系统下安装"></a>VASP在w10系统下安装</h1><p>VASP有w10版本了？不，只是w10支持Linux子系统了，特别的，本篇讲解一下VASP在w10子系统Ubuntu下的安装~组里没有装VASP服务器，就算有也不敢乱提交作业…何况我只是想学习一下密度泛函，完成课程作业，还是在自己PC上学习更放心大胆一些。</p><p>本篇参考了<a href="https://www.jianshu.com/p/dc32a75e2de4" target="_blank" rel="noopener">史上最全win10下Linux子系统的安装及优化方案</a>、<a href="https://zhuanlan.zhihu.com/p/72050942" target="_blank" rel="noopener">vasp 5.4.4 在win10/Ubuntu 18.04上的安装</a>和<a href="https://cndaqiang.github.io/2018/01/09/ubuntu-install-vasp/#%E5%BB%BA%E8%AE%AE%E7%9C%8B%E6%AD%A4%E6%96%87intel-parallel-studio-xe-%E7%BC%96%E8%AF%91vasp%E6%9B%B4%E5%85%B7%E6%9C%89%E6%99%AE%E9%81%8D%E6%80%A7" target="_blank" rel="noopener">Ubuntu VASP安装和运行</a>，感谢前人的探索，我这里稍微写详细一点，整合一下，方便新手入门。</p><h2 id="准备和总述"><a href="#准备和总述" class="headerlink" title="准备和总述"></a>准备和总述</h2><ul><li>平台和软件准备<ul><li>版本1607之后的64位版本的Windows 10（2016年以后都支持了~）</li><li><a href="https://software.intel.com/en-us/parallel-studio-xe/choose-download/student-linux-fortran" target="_blank" rel="noopener">Intel Parallel Studio XE教育版</a>，用学校邮箱注册，<del>很快就能在垃圾箱里收到邮件了</del>，下载18M的<code>.tgz</code>文件（别下完整版，我们用不到那么多依赖），并记录安装序列号，不解压（可见牙膏厂给我国高校发了多少广告）</li><li><a href="https://pan.baidu.com/s/1kuujmg9f-PimBmkkPmjgBw" target="_blank" rel="noopener">VASP 5.4.4及其POT包压缩包</a>（密码：incv，仅供学习参考用途，解压得到两个压缩包，其中POT.txz再解压一次，vasp.5.4.4.tar.gz不用解压）</li><li><a href="https://notepad-plus-plus.org/downloads/" target="_blank" rel="noopener">Notepad++</a>（会用Linux系统下vi可以不用，新手推荐）</li></ul></li></ul><p>思路是这样的，编译VASP需要C++和Fortran的程序包支持，多线需要MPI支持，这三部分集成在Intel Parallel Studio X中，直接在Intel Parallel Studio X平台下安装方便省事，安装Intel Parallel Studio X又需要一些依赖，当然上述都是在Linux环境下的，我们可以通过w10的Ubuntu子系统实现所有编译过程。</p><h2 id="安装Ubuntu子系统"><a href="#安装Ubuntu子系统" class="headerlink" title="安装Ubuntu子系统"></a>安装Ubuntu子系统</h2><p><a href="https://www.jianshu.com/p/dc32a75e2de4" target="_blank" rel="noopener">史上最全win10下Linux子系统的安装及优化方案</a>这篇图文写得太详细了，我全部用搜索避免繁琐点击，总结一下，不懂再去看。</p><ol><li>打开设置→搜索“开发者设置”→选择“开发人员模式”</li><li>搜索“启用或关闭windows功能”→倒数第三排勾选上“适用于Linux的Windows子系统”→重启</li><li>打开win10应用商店→搜索“Ubuntu”→选择第一个安装</li><li>启动Ubuntu等待安装完毕→提示新建Linux用户名和密码，Linux下密码是不显示的，但是已经输入</li></ol><blockquote><p>注意事项</p><ul><li>Linux子系统的默认安装位置为<code>C:\Users\你w10用户名\AppData\Local\Packages\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\LocalState\rootfs</code>，建议创建快捷方式，后面会经常用到，以后用<code>你Linux安装地址</code>指代。<font color="#dd0000">w10下载的安装包千万别直接移到这里，不然Linux系统会识别不到。</font><br></li><li>Linux下的文件<font color="#dd0000">千万不要用w10自带的记事本、写字板打开，</font><br>右键用Notepad++打开编辑。因为w10和Linux换行格式不同。不小心用w10笔记本打开了，请用Notepad++转化为Linux格式。</li></ul></blockquote><p><del>为增加下载速度，更换国内源。用Notepad++打开<code>你Linux安装地址\etc\apt\sources.list</code>，删除所有内容，加上下面科大源</del>发现使用国内源会报错，还没找到没有解决方法，大家还是科学上网吧= =</p><pre><code>deb https://mirrors.ustc.edu.cn/ubuntu/ xenial main restricted universe multiversedeb https://mirrors.ustc.edu.cn/ubuntu/ xenial-updates main restricted universe multiversedeb https://mirrors.ustc.edu.cn/ubuntu/ xenial-backports main restricted universe multiversedeb https://mirrors.ustc.edu.cn/ubuntu/ xenial-security main restricted universe multiverse</code></pre><p>然后打开Ubuntu Shell（就是那个黑色的输入界面），输入</p><pre class="line-numbers language-linux"><code class="language-linux">sudo apt updatesudo apt-get updatesudo apt-get upgrade<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="2.png" alt></p><h2 id="安装Intel-Parallel-Studio-XE需要的依赖"><a href="#安装Intel-Parallel-Studio-XE需要的依赖" class="headerlink" title="安装Intel Parallel Studio XE需要的依赖"></a>安装Intel Parallel Studio XE需要的依赖</h2><p>打开Ubuntu Shell在里面一条条粘贴执行（<code>Enter</code>）以下命令，Shell下粘贴是鼠标右键，一条条安装依赖，有些需要输入<code>Y</code>来继续安装过程。</p><pre class="line-numbers language-linux"><code class="language-linux">sudo apt updatesudo apt-get install gfortransudo apt-get install build-essentialsudo apt-get install libstdc++5sudo apt-get install lib32stdc++6sudo apt-get install libc6-dev-i386sudo apt-get install g++-multilibsudo apt install flexsudo apt install texinfo<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这些依赖有多的，但是我也不知道哪些多的，都装上没问题，少装问题就大了，有实验过的同学可以跟我交流一下，安装完关闭Ubuntu Shell就好</p><h2 id="安装配置Intel-Parallel-Studio-XE"><a href="#安装配置Intel-Parallel-Studio-XE" class="headerlink" title="安装配置Intel Parallel Studio XE"></a>安装配置Intel Parallel Studio XE</h2><ol><li>在你下载的好Intel Parallel Studio XE教育版压缩包的目录下，同时按住<code>Shift</code>鼠标右键，打开Linux Shell（会cd的自己看着办，小白这样最好这样操作），一条条执行下面命令，其中<code>parallel_studio_xe_2019_update5_cluster_edition_online.tgz</code>换成你下载安装包的名称</li></ol><pre class="line-numbers language-linux"><code class="language-linux">tar -xzvf parallel_studio_xe_2019_update5_cluster_edition_online.tgzcd parallel_studio_xe_2019_update5_cluster_edition_onlinesudo ./install.sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>一路按照要求（要学会看英文呀，Linux安装都是英文的，不难的）进行安装，注意后面选择自定义安装，把不需要的组件全部取消选择（<del>硬盘空间大除外</del>）。编译VASP的环境只需要：Intel C++，Intel fortran，math kernel for fortran，math kenel for C++，以及 Intel mpi，总共安装五个组件，但是选择时会额外自动选择其他依赖包，不要取消勾选，大小约为 5 GB（完整的是 16 GB ）。</p><ol start="2"><li>安装完后在<code>你Linux安装地址\home\你Ubuntu用户名</code>找到<code>.bashrc</code>文件，<font color="#dd0000">千万不要用w10自带的记事本、写字板打开，</font><br>右键用Notepad++打开，在最后一行内添加如下内容，<code>2019.5.281</code>换成你安装文件的目录</li></ol><pre><code>source /opt/intel/compilers_and_libraries_2019.5.281/linux/bin/compilervars.sh intel64source /opt/intel/compilers_and_libraries_2019.5.281/linux/bin/iccvars.sh intel64source /opt/intel/compilers_and_libraries_2019.5.281/linux/bin/ifortvars.sh intel64source /opt/intel/compilers_and_libraries_2019.5.281/linux/mkl/bin/mklvars.sh intel64source /opt/intel/impi/2019.5.281/intel64/bin/mpivars.sh    </code></pre><p>然后一条条执行</p><pre class="line-numbers language-linux"><code class="language-linux">source .bashrc which icc ifort icpc mpiifort <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>若提示<code>xxx:command not found</code>，再执行一遍上述命令，没有提示即完成，关闭Shell。</p><ol start="3"><li>然后进入<code>你Linux安装地址\opt\intel\compilers_and_libraries_2019.5.281\linux\mkl\interfaces\fftw3xf</code>，同时按住<code>Shift</code>鼠标右键，打开Linux Shell，一条条执行，第一条是进入root用户，需要输入你的用户名密码。第二条编译完退出Shell，该目录下出现文件：<code>libfftw3xf_intel.a</code><pre class="line-numbers language-linux"><code class="language-linux">sudo susource /home/你Linux用户名/.bashrc make libintel64<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ol><h2 id="安装VASP"><a href="#安装VASP" class="headerlink" title="安装VASP"></a>安装VASP</h2><ol><li>在你解压好得VASP两个压缩包的目录下，按住<code>Shift</code>鼠标右键，打开Linux Shell一条条执行下面命令，</li></ol><pre class="line-numbers language-linux"><code class="language-linux">tar -xzvf vasp.5.4.4.tar.gzcd vasp.5.4.4cp arch/makefile.include.linux_intel makefile.include<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>得到<code>makefile.include</code>文件，<font color="#dd0000">千万不要用w10自带的记事本、写字板打开，</font><br>右键用Notepad++打开，添加一行：</p><pre><code>MKLROOT    = /opt/intel/compilers_and_libraries_2019.5.281/linux/mklMKL_PATH   = $(MKLROOT)/lib/intel64BLAS       =LAPACK     =BLACS      = -lmkl_blacs_intelmpi_lp64SCALAPACK  = $(MKL_PATH)/libmkl_scalapack_lp64.a $(BLACS)</code></pre><p>修改以下内容：</p><pre><code>OBJECTS    = fftmpiw.o fftmpi_map.o fft3dlib.o fftw3d.o \           $(MKLROOT)/interfaces/fftw3xf/libfftw3xf_intel.a</code></pre><ol start="2"><li><p>然后执行开始编译</p><pre class="line-numbers language-Linux"><code class="language-Linux">make all<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>大概30分钟左右会完成编译，关闭Shell，在bin文件夹中会生成三个文件<code>vasp_gam  vasp_ncl  vasp_std</code></p></li><li><p>最后添加环境变量，在<code>你Linux安装地址/home/你Linux用户名/.bashrc</code>中添加以下内容，<font color="#dd0000">千万不要用w10自带的记事本、写字板打开，</font><br>右键用Notepad++打开。</p><pre><code>export PATH=/home/你的Linux用户名/vasp:$PATH</code></pre></li></ol><p>在Linux环境下创建VASP的快捷方式，打开Shell，一条条执行以代码</p><pre class="line-numbers language-linux"><code class="language-linux">mkdir vaspcd vaspln -s /你安装vasp的位置/vasp.5.4.4/build/gam/vasp vasp_gamln -s /你安装vasp的位置/vasp.5.4.4/build/ncl/vasp vasp_nclln -s /你安装vasp的位置/vasp.5.4.4/build/std/vasp vasp_stdcdsource ~/.bashrc<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="运行VASP检查安装"><a href="#运行VASP检查安装" class="headerlink" title="运行VASP检查安装"></a>运行VASP检查安装</h2><p>以计算氧原子为例，新建一个工作文件夹，用Notepad++新建三个文件，<code>INCAR</code>，<code>KPOINTS</code>，<code>POSCAR</code>，内容分别为</p><pre class="line-numbers language-linux"><code class="language-linux">SYSTEM = O atomISMEAR = 0SIGMA = 0.01<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-linux"><code class="language-linux">K-POINTS 0Gamma1 1 10 0 0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-linux"><code class="language-linux">O atom in a box 1.08.0 0.0 0.00.0 8.0 0.00.0 0.0 8.01Cartesian0 0 0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在<code>POT\PAW_PBE\O</code>文件夹中找到氧的<code>POTCAR</code>文件，复制到同一文件夹中，同时按住<code>Shift</code>鼠标右键，打开Linux Shell，执行，</p><pre><code>mpirun -np 2 vasp_std或者vasp_std</code></pre><p>得到以下结果或者接近结果，则安装成功！<br><img src="1.png" alt><br>最后推荐一个VASP学习网站：<a href="https://www.bigbrosci.com/categories/LVASPTHW/page/2/" target="_blank" rel="noopener">Learn VASP The Hard Way</a>。名字看上去很难，但是从Linux入门开始讲起，十分适合新手。</p>]]></content>
      
      
      <categories>
          
          <category> 软件安装和配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> VASP </tag>
            
            <tag> WSL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>有限群的线性表示理论</title>
      <link href="/2019/10/31/you-xian-qun-de-xian-xing-biao-shi-li-lun/"/>
      <url>/2019/10/31/you-xian-qun-de-xian-xing-biao-shi-li-lun/</url>
      
        <content type="html"><![CDATA[<h1 id="有限群的线性表示理论"><a href="#有限群的线性表示理论" class="headerlink" title="有限群的线性表示理论"></a>有限群的线性表示理论</h1><p>最近在学群论，感觉老师上课为了让200个的同学都听懂，讲得太慢了= =，而且不一定还都讲懂了，这里我打算梳理一下知识脉络，不会具体推导公式，谈谈我自己的理解。其实就是一个目标：把群元素映射到矩阵，找到所有可能的映射矩阵。</p><h2 id="群的线性表示"><a href="#群的线性表示" class="headerlink" title="群的线性表示"></a>群的线性表示</h2><p>群的线性表示有两种物理含义：保持图形不变时坐标的变换规律和不变函数空间中函数的变换规律。</p><h3 id="保持图形不变时坐标的变换规律"><a href="#保持图形不变时坐标的变换规律" class="headerlink" title="保持图形不变时坐标的变换规律"></a>保持图形不变时坐标的变换规律</h3><p>首先我们回到群元素的物理定义，群元素是一种使得对称性不变的操作，例如$D_3$群可以表示二维三角形操作不变性，$E$为恒等操作，$D,F$分别为绕z轴旋转$\pi/3$和$2\pi/3$的操作，$A,B,C$为绕三条对称轴旋转$\pi$操作。<br><img src="1.png" width="300/"><br>若把每个变换前后的三角形坐标的对应关系记为：<br>\begin{align}<br>\left(\begin{array}{l}{x^{\prime}} \\ {y^{\prime}}\end{array}\right)=D(R)\left(\begin{array}{l}{x} \\ {y}\end{array}\right)<br>\end{align}每个操作都对应了一个二维矩阵，群元素与矩阵一一对应，群元素乘法规则和矩阵乘法规则也一一对应，故$D(G)$也构成一个群，与群$G$同构，那么就可以说$D(G)$是群$G$的一个线性表示，简称表示。<br>\begin{align}<br>\left\{\begin{array}{ll}{D(E)=\left(\begin{array}{cc}{1} &amp; {0} \\ {0} &amp; {1}\end{array}\right), \quad D(D)=\frac{1}{2}\left(\begin{array}{cc}{-1} &amp; {-\sqrt{3}} \\ {\sqrt{3}} &amp; {-1}\end{array}\right), \quad D(F)=\frac{1}{2}\left(\begin{array}{cc}{-1} &amp; {\sqrt{3}} \\ {-\sqrt{3}} &amp; {-1}\end{array}\right)} \\ {D(A)=\left(\begin{array}{cc}{1} &amp; {0} \\ {0} &amp; {-1}\end{array}\right), \quad D(B)=\frac{1}{2}\left(\begin{array}{cc}{-1} &amp; {\sqrt{3}} \\ {\sqrt{3}} &amp; {1}\end{array}\right), \quad D(C)=\frac{1}{2}\left(\begin{array}{cc}{-1} &amp; {-\sqrt{3}} \\ {-\sqrt{3}} &amp; {1}\end{array}\right)}\end{array}\right.<br>\end{align}这样做的好处在于具体化群元素，只要知道了每个群元素的表示矩阵，我们就算不知道群的乘法表也可以先用矩阵乘法算出矩阵，然后再找出对应的群元素进而得到乘法表，把抽象的群的乘法表示成了具体的矩阵运算。当然这样做的前提是群元素和表示矩阵是一一对应的，因为按照线性表示的定义，群$D(G)$与群$G$也可以是同态的，一个矩阵可以表示多个群元素，例如每个矩阵都是单位矩阵也是群的表示。</p><h3 id="不变函数空间中函数的变换规律"><a href="#不变函数空间中函数的变换规律" class="headerlink" title="不变函数空间中函数的变换规律"></a>不变函数空间中函数的变换规律</h3><p>接下来看物理学中用到的表示，稍微复杂一点。物理中经常用到标量函数$\psi$，例如表示空间中某点的物理量（密度、质量），当参考系发生变化时，坐标变化了，函数形式也要发生变化，但是物理量不会改变。考虑坐标变换$R$，在此变换下：<br>\begin{align}<br>\begin{array}{ll}{x \rightarrow x^{\prime}=R x,} x=R^{-1} x^{\prime} \\ {\psi(x) \rightarrow \psi^{\prime}\left(x^{\prime}\right)=\psi(x)}\end{array}<br>\end{align}引入标量函数变换算符$P_R$描述坐标变化$R$下标量函数的变化：<br>\begin{align}<br>\psi^{\prime} \equiv P_{R} \psi<br>\end{align}这样就有<br>\begin{align}<br>\psi^{\prime}(x)=P_{R} \psi(x)=\psi\left(R^{-1} x\right)<br>\end{align}$R$与$P_R$一一对应，可以证明群$G$和群$P_G$同构。同样的线性算符在参考系变换下也不会发生物理本质的变化，其变换规律为：<br>\begin{align}<br>L^{\prime}(x)=P_{R} L(x) P_{R}^{-1}<br>\end{align}在量子力学中对称变换非常重要，对称变换指的是在变换$R$对应算符$P_R$下，哈密顿算符不变。也就是说当$R$是系统的对称变换时，哈密顿算符与标量函数变换算符对易。<br>\begin{align}<br>H^{\prime}(x)=P_{R} H(x) P_{R}^{-1}=H(x) \quad \Leftrightarrow \quad\left[H(x), P_{R}\right]=\mathbf{0}<br>\end{align}当能级$E$是$m$重简并时，有$m$个线性无关的本征函数：<br>\begin{align}<br>H(x) \psi_{\mu}(x)=E \psi_{\mu}(x) \quad(\mu=1, 2, \cdots, m)<br>\end{align}这$m$个线性无关的本征函数的线性组合也是本征函数：<br>\begin{align}<br>H(x)\left[ \sum_{\nu=1}^{m} \psi_{\nu}(x) D_{\nu \mu}(R)\right]=E\left[ \sum_{\nu=1}^{m} \psi_{\nu}(x) D_{\nu \mu}(R)\right] \quad(\mu=1, 2, \cdots, m)<br>\end{align}$P_R$作用于本征函数后，仍然是哈密顿量同一能级的本征函数：<br>\begin{align}<br>H(x)\left[P_{R} \psi_{\mu}(x)\right]=E\left[P_{R} \psi_{\mu}(x)\right]<br>\end{align}则$P_R\psi_\mu(x)$只能为线性组合，也就是说能级为$E$的本征函数张成的$m$维函数空间对$P_R$的作用保持不变，仍然在同一个函数空间内。<br>\begin{align}<br>P_{R} \psi_{\mu}(x)=\sum_{\nu=1}^{m} \psi_{\nu}(x) D_{\nu \mu}(R)<br>\end{align}这样定义的$D(R)$与$R$一一或者一多对应，可以证明$D(G)$与$G$同构或者同态，群$D(G)$可以称为群$G$的一个线性表示。 </p><h3 id="群的线性表示定义"><a href="#群的线性表示定义" class="headerlink" title="群的线性表示定义"></a>群的线性表示定义</h3><p>现在我们可以把群的线性表示教科书定义拿出来了：</p><blockquote><p><strong>群的线性表示</strong>：若行列式不为零的$m\times m$矩阵集合构成的群$D(G)$与已知群$G$同构或同态，则$D(G)$称为群$G$的一个$m$维线性表示，简称表示。</p></blockquote><p>那么我们对同一个群得到不同的表示，以$D_3$为例：</p><ul><li>一维恒等表示<br>$$D(E)=D(D)=D(F)=D(A)=D(B)=D(C)=1$$</li><li>一维非恒等表示<br>$$D(E)=D(D)=D(F)=−D(A)=−D(B)=−D(C)=1$$</li><li>二维表示<br>\begin{align}<br>\left\{\begin{array}{ll}{D(E)=\left(\begin{array}{cc}{1} &amp; {0} \\ {0} &amp; {1}\end{array}\right), \quad D(D)=\frac{1}{2}\left(\begin{array}{cc}{-1} &amp; {-\sqrt{3}} \\ {\sqrt{3}} &amp; {-1}\end{array}\right), \quad D(F)=\frac{1}{2}\left(\begin{array}{cc}{-1} &amp; {\sqrt{3}} \\ {-\sqrt{3}} &amp; {-1}\end{array}\right)} \\ {D(A)=\left(\begin{array}{cc}{1} &amp; {0} \\ {0} &amp; {-1}\end{array}\right), \quad D(B)=\frac{1}{2}\left(\begin{array}{cc}{-1} &amp; {\sqrt{3}} \\ {\sqrt{3}} &amp; {1}\end{array}\right), \quad D(C)=\frac{1}{2}\left(\begin{array}{cc}{-1} &amp; {-\sqrt{3}} \\ {-\sqrt{3}} &amp; {1}\end{array}\right)}\end{array}\right.<br>\end{align}</li><li>三维表示<br>\begin{align}<br>\left\{\begin{array}{ll}{D(E)=\left(\begin{array}{ccc}{1} &amp; {0} &amp; {0} \\ {0} &amp; {1} &amp; {0} \\ {0} &amp; {0} &amp; {1}\end{array}\right),} \quad  {D(D)=\frac{1}{2}\left(\begin{array}{ccc}{-1} &amp; {-\sqrt{3}} &amp; {0} \\ {\sqrt{3}} &amp; {-1} &amp; {0} \\ {0} &amp; {0} &amp; {2}\end{array}\right)} \\ {D(F)=\frac{1}{2}\left(\begin{array}{ccc}{-1} &amp; {-\sqrt{3}} &amp; {0} \\ {-\sqrt{3}} &amp; {-1} &amp; {0} \\ {0} &amp; {0} &amp; {2}\end{array}\right), \quad D(A)=\left(\begin{array}{ccc}{1} &amp; {0} &amp; {0} \\ {0} &amp; {-1} &amp; {0} \\ {0} &amp; {0} &amp; {-1}\end{array}\right)} \\ {D(B)=\frac{1}{2}\left(\begin{array}{ccc}{-1} &amp; {\sqrt{3}} &amp; {0} \\ {\sqrt{3}} &amp; {1} &amp; {0} \\ {0} &amp; {0} &amp; {-2}\end{array}\right), \quad D(C)=\frac{1}{2}\left(\begin{array}{rrr}{-1} &amp; {-\sqrt{3}} &amp; {0} \\ {-\sqrt{3}} &amp; {1} &amp; {0} \\ {0} &amp; {0} &amp; {-2}\end{array}\right)}\end{array}\right.<br>\end{align}甚至可以有更高维度的表示，那么就自然而然出现一些问题：如何找到所有维度的表示？是不是有无穷个表示？如何能简洁地写出这些表示？</li></ul><h2 id="简化"><a href="#简化" class="headerlink" title="简化"></a>简化</h2><p>首先我们要对这些矩阵进行简化，有一些表示矩阵本质上是一样的，我们称为等价表示，还有一些表示矩阵可以写为一些表示矩阵的直和，我们可以直接约化。所以我们把问题简化为寻找不等价不可约表示。</p><h3 id="等价表示"><a href="#等价表示" class="headerlink" title="等价表示"></a>等价表示</h3><p>我们将构成不变函数空间称为表示空间，表示空间的基矢则为上述不变函数$\psi_{\nu}$，该基矢的任意线性组合$\varphi_{\mu}$仍然为基矢，那么$P_R$的矩阵形式也会发生变化，但是本质上是一样的，具体为一个相似变换：<br>$$\varphi_{\mu}=\sum_{\nu} \psi_{v} X_{\nu \mu} \quad P_{R} \varphi_{\mu}=\sum_{\lambda} \varphi_{\lambda} \bar{D}_{\lambda \mu}(R) \quad \bar{D}(R)=X^{-1} D(R) X$$</p><blockquote><p><strong>等价表示</strong>：若群$G$所有元素$R$在两个表示$D(G)$和$\bar{D}(G)$中的表示矩阵存在同一个相似变换关系，这两个表示称为等价表示，记为$D(G) \cong \bar{D}(G)$</p></blockquote><p>还有一个比较重要的概念：特征标。特征标是表示矩阵的迹，即$\chi(R)=\mathbf{T} \mathbf{r} D(R)$。相似矩阵的迹相同，所以同一个类元素的表示和等价表示的特征标是相同的。那么反过来特征标相同，是否是同一个类或等价表示呢？对于前一个明显不是，比如表示矩阵都取一维单位矩阵，特征标都是1，但不是同一个类的。但后一个是对的，特征标一样的表示一定是等价的，这个在后面表示理论会解释。则两表示等价的充要条件为特征标相同。</p><blockquote><p><strong>定理</strong>：有限群的表示等价于幺正表示，两个等价的幺正表示一定可以通过幺正的相似表换相联系。</p></blockquote><p>这样我们可以把所有表示转化为幺正表示研究，幺正矩阵有很好性质，例如行列正交。</p><h3 id="约化表示"><a href="#约化表示" class="headerlink" title="约化表示"></a>约化表示</h3><p>当我们发现表示矩阵有很多0元时，可以知道表示空间存在子空间，不需要那么多函数基矢就能表示一部分空间。所以我们可以定义可约表示</p><blockquote><p><strong>可约表示</strong>：若群$G$的表示$D(G)$的每一个表示矩阵$D(R)$都能通过同一相似变换$X$化成同一形式的阶梯矩阵<br>$$X^{-1} D(R) X=\left(\begin{array}{cc}{D^{(1)}(R)} &amp; {M(R)} \\ {0} &amp; {D^{(2)}(R)}\end{array}\right)$$则此表示称为可约表示，否则称为不可约表示。当$M(R)=0$时，称为完全可约表示。</p></blockquote><p>我们知道任何表示都可以写为幺正表示，那么可约表示中的$M(R)$一定可以通过相似表换变为0，那么可约表示一定是完全可约的。</p><blockquote><p><strong>定理</strong>：有限群的可约表示是完全可约的。</p></blockquote><h2 id="群代数"><a href="#群代数" class="headerlink" title="群代数"></a>群代数</h2><p>接下来我们要找出有限群的所有的不等价不可约表示。需要引入群空间，即以群元素为基矢的空间，还是以$D_3$群为例子：<br><img src="2.png" alt><br>将每种表示的每个元素对应表示矩阵当做群空间的矢量，这样$D_3$群的一维恒等表示、一维非恒等表示和二维表示变为6个6维矢量：<br><img src="3.png" alt><br>6维矢量空间只有6的线性独立的矢量，可以验证这6个矢量是正交的，这是由正交定理保障的，也是完备的，这是由完备性定理保障的。那么如果还有新的表示，构成的群空间矢量一定可以用前6个矢量线性组合得到，也就是说我们找到了所有的线性独立群空间矢量，并且有对应的表示，那么我们就找到了所有的不等价不可约表示。</p><blockquote><p><strong>正交定理</strong>：有限群的不等价不可约幺正表示$D^i(G)$和$D^j(G)$的矩阵元素，作为群空间的矢量，满足正交关系<br>$$\sum_{R \in G} D_{\mu \rho}^{i}(R)^{*} D_{\nu \lambda}^{j}(R)=\frac{g}{m_{j}} \delta_{i j} \delta_{\mu \nu} \delta_{\rho \lambda}$$其中$g$为群$G$的阶数，$m_j$为表示矩阵$D^j$的维数。</p></blockquote><blockquote><p><strong>完备性定理</strong>：有限群不等价不可约表示维数的平方和等于群的阶数。</p></blockquote><p>由正交定理，可以推得将特征标作为群空间矢量也是正交完备的，该矢量的维度为类的个数，那么不等价不可约表示的数目等于群的等价类的个数。<br><img src="4.png" width="300/"><br>下面给出两条推论，可以方便快速判断是否等价和可约。</p><blockquote><p><strong>等价</strong>：有限群两等价表示的充要条件是每个元素在两表示中特征标对应相等</p></blockquote><blockquote><p><strong>不可约</strong>：有限群表示为不可约表示的充要条件是$\sum_{R \in G}|\chi(R)|^{2}=g$</p></blockquote><p>群$G$的可约表示$D(G)$可约化为若干不可约表示$D_j(G)$的直和：<br>$$X^{-1} D(R) X=\bigoplus_{j} a_{j} D^{j}(R), \quad \chi(R)=\sum_{j} a_{j} \chi^{j}(R)$$那么不可约表示的重数$a_{j}$为：<br>$$a_{j}=\frac{1}{g} \sum_{R \in G} \chi^{j}(R)^{*} \chi(R)$$</p>]]></content>
      
      
      <categories>
          
          <category> 物理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 群论 </tag>
            
            <tag> 表示理论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>支持向量机（一）</title>
      <link href="/2019/10/30/zhi-chi-xiang-liang-ji-yi/"/>
      <url>/2019/10/30/zhi-chi-xiang-liang-ji-yi/</url>
      
        <content type="html"><![CDATA[<h1 id="支持向量机（一）"><a href="#支持向量机（一）" class="headerlink" title="支持向量机（一）"></a>支持向量机（一）</h1><p>支持向量机（Support Vector Machine）以前在<a href="https://www.coursera.org/learn/machine-learning?" target="_blank" rel="noopener">吴恩达的机器学习课</a>上也学习过，但是只是懂基本原理和代码，这里把算法的来龙去脉讲清楚一点。本篇含有大量公式，可能需要较长时间渲染。</p><h2 id="线性可分系统"><a href="#线性可分系统" class="headerlink" title="线性可分系统"></a>线性可分系统</h2><h3 id="转化为二次凸问题"><a href="#转化为二次凸问题" class="headerlink" title="转化为二次凸问题"></a>转化为二次凸问题</h3><p>对于一个线性可分系统，我们可以直接用一条直线分开，判别函数为：<br>\begin{align}<br>f_{\omega, b}(x)=sign\left(\omega^{T} x+b\right)<br>\end{align}<br>但是可能有多条直线都能分开，当然选择“分得最开”的直线，那怎么描述分得最开呢？这里用“留白”（Margin）来描述，例如图1，黑线Margin最大，则黑线为最佳选择。<br><img src="1.png" width="300" alt="图1"><br>用$\gamma$来表示数据点到直线的距离的最小值，即Margin边缘到直线的距离，则我们需要优化<br>\begin{array}{l}<br>{\max\limits_{\gamma, \omega, b} \gamma} \\ {\text { s.t. } y^{(i)}\left(\frac{\omega^{T}}{|\omega|_{2}} x^{(i)}+\frac{b}{|\omega|_{2}}\right) \geq \gamma, i=1, \cdots, n}<br>\end{array}<br>然后转化为一个二次凸问题：<br>\begin{array}{ll}<br>{\min\limits_{\omega, b}} &amp; {\frac{1}{2}|\omega|_{2}^{2}} \\ {\text { s.t. }} &amp; {y^{(i)}\left(\omega^{T} x^{(i)}+b\right) \geq 1, i=1, \cdots, n}<br>\end{array}<br>从这里我们就可以看到为什么该算法要被称为Support Vector，所有在Margin边缘的点都满足$y\left(\omega^{T} x+b\right)=1$，Margin仅仅由这些点“支持出来”，与其他点无关。<br><img src="2.png" width="300" alt="图2"></p><h3 id="含不等式的拉格朗日乘子法"><a href="#含不等式的拉格朗日乘子法" class="headerlink" title="含不等式的拉格朗日乘子法"></a>含不等式的拉格朗日乘子法</h3><p>下面我们会对上述二次凸问题再一次转化，需要用到含不等式的拉格朗日乘子法。对于含不等式的优化问题：<br>\begin{array}{ll}<br>{\min\limits_{\omega}} &amp; {f(\omega)} \\ {\text { s.t. }} &amp; {g_{i}(\omega) \leq 0, i=1, \cdots, k} \\ {} &amp; {h_{i}(\omega)=0, i=1, \cdots, l}<br>\end{array}<br>拉格朗日量为：（这里限定$\alpha_i \geq 0$）<br>\begin{align}<br>L(\omega, b)=f(\omega)+\sum_{i=1}^{k} \alpha_{i} g_{i}(\omega)+\sum_{i=1}^{l} \beta_{i} h_{i}(\omega)<br>\end{align}<br>在优化过程中由于取最小最大值顺序会出现不同的极值：<br>\begin{align}<br>d^{*}=\max _{\alpha, \beta: \alpha_{i} \geq 0} \min _{\omega} L(\omega, \alpha, \beta) \leq \min _{\omega} \max _{\alpha, \beta: \alpha_{i} \geq 0} L(\omega, \alpha, \beta)=p^{*}<br>\end{align}<br>当$d^{*}=p^{*}$时，$\omega^{*}, \alpha^{*}, \beta^{*}$需要满足Karush-Kuhn-Tucker(KKT)条件<br>\begin{align}<br>\begin{aligned} \frac{\partial}{\partial \omega_{i}} L\left(\omega^{*}, \alpha^{*}, \beta^{*}\right) &amp;=0, i=1, \cdots, M \\ \frac{\partial}{\partial \beta_{i}} L\left(\omega^{*}, \alpha^{*}, \beta^{*}\right) &amp;=0, i=1, \cdots, l \\ \alpha_{i}^{*} g_{i}\left(\omega^{*}\right) &amp;=0, i=1, \cdots, k, \text {KKT互补松弛条件} \\ g_{i}\left(\omega^{*}\right) &amp; \leq 0, i=1, \cdots, k, \\ \alpha_{i}^{*} &amp; \geq 0, i=1, \cdots, k \end{aligned}<br>\end{align}<br>其中只有KKT互补松弛条件是额外要求添加的。</p><h3 id="用拉格朗日乘子法转化"><a href="#用拉格朗日乘子法转化" class="headerlink" title="用拉格朗日乘子法转化"></a>用拉格朗日乘子法转化</h3><p>这样，我们将之前优化问题的拉格朗日量写为：<br>\begin{align}<br>L(\omega, b, \alpha)=\frac{1}{2}|\omega|_{2}^{2}-\sum_{i=1}^{n} \alpha_{i}\left[y^{(i)}\left(\omega^{T} x^{(i)}+b\right)-1\right]<br>\end{align}<br>对原始优化问题再一次转化为：<br>\begin{align}<br>\begin{aligned} \max _{\alpha} &amp; \sum_{i=1}^{n} \alpha_{i}-\frac{1}{2} \sum_{i, j=1}^{n} y^{(i)} y^{(j)} \alpha_{i} \alpha_{j}\left(x^{(i)}\right)^{T} x^{(j)} \\ \text { s.t. } &amp; \alpha_{i} \geq 0, i=1, \cdots, n \\ &amp; \sum_{i=1}^{n} \alpha_{i} y^{(i)}=0 \end{aligned}<br>\end{align}<br>最佳参数为：<br>\begin{align}<br>\omega^{*}=\sum_{i=1}^{n} \alpha_{i}^{*} y^{(i)} x^{(i)}, b^{*}=y^{(j)}-\sum_{i=1}^{n} \alpha_{i}^{*} y^{(i)}\left(x^{(i)}\right)^{T} x^{(j)}<br>\end{align}<br>注意到只有支持向量点$\alpha_i &gt; 0$，对$\omega^{*}$才有贡献</p><h2 id="非线性可分系统"><a href="#非线性可分系统" class="headerlink" title="非线性可分系统"></a>非线性可分系统</h2><p>当系统线性不可分时，如图3所示，红点中出现一个绿点，<br><img src="3.png" width="300" alt="图3"><br>对于这种明显分错情况，我们可以添加容许分错的松弛（Slack）变量$\xi_{i}$，代表分错数据点到Margin边缘的距离。<br><img src="4.png" width="300" alt="图4"><br>则优化问题变为：<br>\begin{align}<br>\begin{array}{ll}{\min\limits_{\omega, b}} &amp; {\frac{1}{2}|\omega|_{2}^{2}+C \sum_{i=1}^{n} \xi_{i}} \\ {\text { s.t. }} &amp; {y^{(i)}\left(\omega^{T} x^{(i)}+b\right) \geq 1-\xi_{i}, \quad i=1, \cdots, n} \\ {} &amp; {\xi_{i} \geq 0, \quad i=1, \cdots, n}\end{array}<br>\end{align}<br>这里参数C代表了模型对错误分类的容许程度，当C越小时容许程度越高。进行同样的第二次转换，得到新的优化问题：<br>\begin{align}<br>\begin{array}{ll}{\max\limits_{\alpha}} &amp; {\sum_{i=1}^{n} \alpha_{i}-\frac{1}{2} \sum_{i, j=1}^{n} y^{(i)} y^{(j)} \alpha_{i} \alpha_{j}\left(x^{(i)}\right)^{T} x^{(j)}} \\ {\text { s.t. }} &amp; {0 \leq \alpha_{i} \leq C, i=1, \cdots, n} \\ {} &amp; {\sum_{i=1}^{n} \alpha_{i} y^{(i)}=0}\end{array}<br>\end{align}<br>最优参数形式不变：<br>\begin{align}<br>\omega^{*}=\sum_{i=1}^{n} \alpha_{i}^{*} y^{(i)} x^{(i)}, b^{*}=y^{(j)}-\sum_{i=1}^{n} \alpha_{i}^{*} y^{(i)}\left(x^{(i)}\right)^{T} x^{(j)}<br>\end{align}<br>由KKT给出的互补松弛条件为：<br>\begin{align}<br>\alpha_{i}^{*}\left[y^{(i)}\left(w^{* T} x^{(i)}+b\right)-1+\xi_{i}\right]=0, \eta_{i}^{*} \xi_{i}=0<br>\end{align}<br>于是，可以看出$\alpha_{i}^{*}=0$时在正确的一边，$0&lt;\alpha_{i}^{*}&lt; C$为在Margin边界上，$0&lt;\alpha_{i}^{*}= C$在错误的一边。</p><h2 id="SVM的损失函数"><a href="#SVM的损失函数" class="headerlink" title="SVM的损失函数"></a>SVM的损失函数</h2><p>对于分错的才有损失，所以损失函数里第一项只取正的部分，称为Hinge Loss Function，第二项为正则项。<br>\begin{align}<br>\min _{\omega, b} \sum_{i=1}^{n}\left[1-y^{(i)}\left(\omega^{T} x^{(i)}+b\right)\right]_{+}+\lambda|\omega|_{2}^{2}<br>\end{align}<br>图5红线为原本的损失函数，绿线则为Hinge Loss Function，可以用来凸优化，这种思想在现代很多优化问题都有用到，如图6所示。<br><img src="5.png" width="300" alt="图5"><br><img src="6.png" width="300" alt="图6"></p>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SVM </tag>
            
            <tag> 模式识别 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《如何阅读一本书》</title>
      <link href="/2019/10/30/ru-he-yue-du-yi-ben-shu/"/>
      <url>/2019/10/30/ru-he-yue-du-yi-ben-shu/</url>
      
        <content type="html"><![CDATA[<h1 id="《如何阅读一本书》"><a href="#《如何阅读一本书》" class="headerlink" title="《如何阅读一本书》"></a>《如何阅读一本书》</h1><p>为什么要阅读<a href="https://book.douban.com/subject/1013208//" target="_blank" rel="noopener">这本书</a>？在现在信息繁多的时代我们可以轻易在网络上获得各种信息，技巧和思考结论，那么传统的书籍内容多，杂，还有阅读的必要吗？我觉得是有的，书籍中有的是思考过程，对形成自己独立的思维模式帮助很大，然后是快餐式的阅读，如微信公众号，知乎上的文章，给人以急于求成的急迫感，而知识思维的建立则是一步步的，慢而有序。</p><p>这本书是一本实用型帮助人加强阅读能力的书。首先指出了阅读的两个目的：为获取资讯和增强理解力，然后谈到了阅读的四个层层递进的层次：基础阅读、检视阅读、分析阅读和主题阅读，对每个层次都制定了相应的阅读规则方便阅读新手入门，并且也对不同类别书阅读提供了建议。</p><p><img src="1.png" alt><br>这个导图来自Xmind ZEN的参考实例，值的学习在大标题加入图片来增强美观和帮助理解的做法。</p><p>最后给出本书<a href="https://book.douban.com/review/4464708/" target="_blank" rel="noopener">参考书单</a>的整理列表</p>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 思维技巧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo+Github pages绑定域名</title>
      <link href="/2019/10/28/hexo-github-pages-bang-ding-yu-ming/"/>
      <url>/2019/10/28/hexo-github-pages-bang-ding-yu-ming/</url>
      
        <content type="html"><![CDATA[<h1 id="Hexo-Github-pages绑定域名"><a href="#Hexo-Github-pages绑定域名" class="headerlink" title="Hexo+Github pages绑定域名"></a>Hexo+Github pages绑定域名</h1><p>部署好GitHub pages后想换个域名，用的中文域名，老是出错，这里分享一下中文域名遇到的坑。</p><h2 id="绑定域名步骤"><a href="#绑定域名步骤" class="headerlink" title="绑定域名步骤"></a>绑定域名步骤</h2><h3 id="购买域名"><a href="#购买域名" class="headerlink" title="购买域名"></a>购买域名</h3><p>这里以在腾讯云上购买域名为例,大家也可以去其他平台购买域名。登录<a href="https://dnspod.cloud.tencent.com/" target="_blank" rel="noopener">腾讯云</a>注册域名。注册域名前需查询域名是否已被注册，选择自己喜欢的域名，先不要支付！因为域名属于即时产品，域名注册时收取的费用也是需要上交到注册局的，所以一经注册是不能进行退费处理的，所以先想好再买，其次，现在域名都需要实名认证的，假如你在转户口换了身份证什么的可能不能认证成功，所以推荐先创建信息模板，以腾讯云为例：登陆到腾讯云控制台——云产品——域名管理——域名信息模板——新建模板，实名认证成功后再购买域名直接用模板认证就很快了，也不会买了域名没认证用不了了。<br><img src="1.png" alt></p><h3 id="域名解析"><a href="#域名解析" class="headerlink" title="域名解析"></a>域名解析</h3><p>购买且实名认证后，进入管理控制台解析域名<br><img src="2.png" alt><br>按照下面配置，记录值换成自己的GitHub pages地址<br><img src="3.png" alt></p><h3 id="创建CNAME文件"><a href="#创建CNAME文件" class="headerlink" title="创建CNAME文件"></a>创建CNAME文件</h3><p>在本地的根目录下的<code>source</code>文件夹中新建一个名为<code>CNAME</code>的文件，编辑文件内容为个人域名（没有<code>http://</code> ,也没有<code>www.</code>）,使用hexo d -g命令部署博客，这时在浏览器中输入新注册的域名，已经可以正常的访问博客了。</p><blockquote><p>注意<del>大坑</del>：<code>CNAME</code>的文件中英文域名直接写新注册的域名，中文域名的话,则需先将中文域名转换为Punycode标准编码的字符串：<a href="http://www.dh.vg/tools/zm.php" target="_blank" rel="noopener">中文域名转换Punycode标准编码工具</a>，例如，我的域名<code>心在就好.com</code>转化为<code>xn--3ds27ck5co6e.com</code></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 软件安装和配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Github pages </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo语法</title>
      <link href="/2019/10/27/hexo-yu-fa/"/>
      <url>/2019/10/27/hexo-yu-fa/</url>
      
        <content type="html"><![CDATA[<h1 id="Hexo语法"><a href="#Hexo语法" class="headerlink" title="Hexo语法"></a>Hexo语法</h1><p>学习搭建Hexo博客，例如搭建像本网站一样的博客，请移步查看<a href="https://godweiyang.com/2018/04/13/hexo-blog/#toc-heading-43" target="_blank" rel="noopener">超详细Hexo+Github博客搭建小白教程</a></p><h2 id="Hexo常用命令"><a href="#Hexo常用命令" class="headerlink" title="Hexo常用命令"></a>Hexo常用命令</h2><h3 id="新建new"><a href="#新建new" class="headerlink" title="新建new"></a>新建new</h3><p>新建的文件在<code>/source/_posts/my-blog.md</code></p><pre class="line-numbers language-hexo"><code class="language-hexo">hexo n "my blog"<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="编译generate"><a href="#编译generate" class="headerlink" title="编译generate"></a>编译generate</h3><p>一般部署上去的时候都需要编译一下，编译后，会出现一个public文件夹，将所有的md文件编译成html文件</p><pre class="line-numbers language-hexo"><code class="language-hexo">hexo g<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="开启本地服务server"><a href="#开启本地服务server" class="headerlink" title="开启本地服务server"></a>开启本地服务server</h3><pre class="line-numbers language-hexo"><code class="language-hexo">hexo s<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="部署deploy"><a href="#部署deploy" class="headerlink" title="部署deploy"></a>部署deploy</h3><pre class="line-numbers language-hexo"><code class="language-hexo">hexo d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="清除clean"><a href="#清除clean" class="headerlink" title="清除clean"></a>清除clean</h3><p>当source文件夹中的部分资源更改过之后，特别是对文件进行了删除或者路径的改变之后，需要执行这个命令，然后重新编译。</p><pre class="line-numbers language-hexo"><code class="language-hexo">hexo clean<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="Markdown语法"><a href="#Markdown语法" class="headerlink" title="Markdown语法"></a>Markdown语法</h2><p>Hexo中Markdown语法与原生态有所不同</p><h3 id="文章属性标签"><a href="#文章属性标签" class="headerlink" title="文章属性标签"></a>文章属性标签</h3><pre class="line-numbers language-hexo"><code class="language-hexo">title: 文章标题catalog: 是否显示段落目录date: 文章日期subtitle: 子标题header-img: 顶部背景图片top: 是否置顶toc: 是否开启目录tags: 标签categories: 分类summary：文章摘要mathjax: 是否开启数学公式输入<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>当一篇文章有多个标签时，用中括号包含多个标签</p><pre class="line-numbers language-hexo"><code class="language-hexo">tags: [标签1,标签2,标签3]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="网站内超链接"><a href="#网站内超链接" class="headerlink" title="网站内超链接"></a>网站内超链接</h3><pre class="line-numbers language-hexo"><code class="language-hexo">{% post_link Markdown语法 Markdown语法的超链接 %}<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><a href="/2019/10/27/markdown-yu-fa/" title="Markdown语法的超链接">Markdown语法的超链接</a><h3 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a>插入图片</h3><p>当新建blog时，会产生<code>my-blog.md</code>和<code>my-blog</code>文件夹，要插入文章的图片放在该文件夹内，就可以直接引用，语法为：</p><pre class="line-numbers language-hexo"><code class="language-hexo">![](picture.png)&lt;img src=picture.png width=300 hight=300/&gt;  #定义宽高<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>并排显示</p><pre class="line-numbers language-hexo"><code class="language-hexo"><div align="center"><img src="图片地址" height="300px" alt="图片说明" ><img src="图片地址" height="300px" alt="图片说明" ></div><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="公式"><a href="#公式" class="headerlink" title="公式"></a>公式</h3><p>文章头<code>mathjax: true</code>开启数学公式输入，输入格式和LaTex一样，用<code>$公式$</code>或者<code>$$公式$$</code></p><pre class="line-numbers language-latex"><code class="language-latex"><span class="token equation string">$<span class="token equation-command regex">\left</span>(<span class="token equation-command regex">\sum</span>_{k=<span class="token equation-command regex">\frac</span>{1}{2}}^{N^2}<span class="token equation-command regex">\frac</span>{1}{k}<span class="token equation-command regex">\right</span>)$</span><span class="token equation string">$$</span><span class="token function selector">\left</span>(<span class="token function selector">\sum</span>_<span class="token punctuation">{</span>k=<span class="token function selector">\frac</span><span class="token punctuation">{</span>1<span class="token punctuation">}</span><span class="token punctuation">{</span>2<span class="token punctuation">}</span><span class="token punctuation">}</span>^<span class="token punctuation">{</span>N^2<span class="token punctuation">}</span><span class="token function selector">\frac</span><span class="token punctuation">{</span>1<span class="token punctuation">}</span><span class="token punctuation">{</span>k<span class="token punctuation">}</span><span class="token function selector">\right</span>)<span class="token equation string">$$</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>$\left(\sum_{k=\frac{1}{2}}^{N^2}\frac{1}{k}\right)$<br>$$\left(\sum_{k=\frac{1}{2}}^{N^2}\frac{1}{k}\right)$$</p>]]></content>
      
      
      <categories>
          
          <category> 编程语法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown语法</title>
      <link href="/2019/10/27/markdown-yu-fa/"/>
      <url>/2019/10/27/markdown-yu-fa/</url>
      
        <content type="html"><![CDATA[<h1 id="Markdown语法"><a href="#Markdown语法" class="headerlink" title="Markdown语法"></a>Markdown语法</h1><p>这里写的是不含任何插件的原生态Markdown的语法</p><h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><p>在行首插入1到6个#，对应1到6阶标题</p><pre class="line-numbers language-js"><code class="language-js"># 这是 H1## 这是 H2### 这是 H3#### 这是 H4##### 这是 H5###### 这是 H6<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><pre class="line-numbers language-markdown"><code class="language-markdown"><span class="token blockquote punctuation">></span>这里是一段引用<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>这里是一段引用</p></blockquote><h2 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h2><p>只需要三个 - 号</p><pre class="line-numbers language-markdown"><code class="language-markdown"><span class="token hr punctuation">---</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><h2 id="换行"><a href="#换行" class="headerlink" title="换行"></a>换行</h2><p>只需要两个以上的空格然后回车</p><pre class="line-numbers language-markdown"><code class="language-markdown">我是首行  我换行了<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>我是首行<br>我换行了</p><h2 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h2><pre class="line-numbers language-markdown"><code class="language-markdown">~~要删掉的内容~~<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><del>要删掉的内容</del></p><h2 id="字体格式和颜色"><a href="#字体格式和颜色" class="headerlink" title="字体格式和颜色"></a>字体格式和颜色</h2><pre class="line-numbers language-markdown"><code class="language-markdown"><span class="token bold"><span class="token punctuation">**</span>加粗<span class="token punctuation">**</span></span><span class="token bold"><span class="token punctuation">__</span>加粗<span class="token punctuation">__</span></span><span class="token italic"><span class="token punctuation">*</span>斜体<span class="token punctuation">*</span></span><span class="token italic"><span class="token punctuation">_</span>斜体<span class="token punctuation">_</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><strong>加粗</strong><br><strong>加粗</strong><br><em>斜体</em><br>_斜体_</p><p>&#61;&#61;直接飘红文字&#61;&#61;</p><pre class="line-numbers language-markdown"><code class="language-markdown"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>font</span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#dd0000<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>浅红色文字<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>font</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>font</span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#660000<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>深红色文字<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>font</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>font</span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#00dd00<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>浅绿色文字<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>font</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>font</span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#006600<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>深绿色文字<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>font</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>font</span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#0000dd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>浅蓝色文字<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>font</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>font</span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#000066<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>深蓝色文字<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>font</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>font</span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#dddd00<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>浅黄色文字<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>font</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>font</span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#666600<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>深黄色文字<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>font</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>font</span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#00dddd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>浅青色文字<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>font</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>font</span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#006666<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>深青色文字<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>font</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>font</span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#dd00dd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>浅紫色文字<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>font</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>font</span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#660066<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>深紫色文字<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>font</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>==直接飘红文字==<br><font color="#dd0000">浅红色文字</font><br><br><font color="#660000">深红色文字</font><br><br><font color="#00dd00">浅绿色文字</font><br><br><font color="#006600">深绿色文字</font><br><br><font color="#0000dd">浅蓝色文字</font><br><br><font color="#000066">深蓝色文字</font><br><br><font color="#dddd00">浅黄色文字</font><br><br><font color="#666600">深黄色文字</font><br><br><font color="#00dddd">浅青色文字</font><br><br><font color="#006666">深青色文字</font><br><br><font color="#dd00dd">浅紫色文字</font><br><br><font color="#660066">深紫色文字</font><br><br>更多颜色查询：<a href="http://www.114la.com/other/rgb.htm" target="_blank" rel="noopener">http://www.114la.com/other/rgb.htm</a></p><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><h3 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h3><p>使用 * + - 来做为列表的项目标记</p><pre class="line-numbers language-markdown"><code class="language-markdown"><span class="token list punctuation">*</span> Candy.<span class="token list punctuation">*</span> Gum.<span class="token list punctuation">+</span> Booze.<span class="token list punctuation">-</span> Booze.  <span class="token list punctuation">+</span> 嵌套  <span class="token list punctuation">*</span> 嵌套<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>Candy.</li><li>Gum.</li></ul><ul><li>Booze.</li></ul><ul><li>Booze.<ul><li>嵌套</li></ul><ul><li>嵌套</li></ul></li></ul><h3 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h3><p>一般的数字接着一个英文句点作为项目标记，效果与数字无关只与顺序有关</p><pre class="line-numbers language-markdown"><code class="language-markdown"><span class="token list punctuation">1.</span> Red<span class="token list punctuation">2.</span>  Green<span class="token list punctuation">3.</span>    Blue<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ol><li>Red</li><li>Green</li><li>Blue</li></ol><h2 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h2><p>超链接和引用</p><h3 id="网址"><a href="#网址" class="headerlink" title="网址"></a>网址</h3><p>在方括号后面用圆括号接上链接</p><pre class="line-numbers language-markdown"><code class="language-markdown">这是一个<span class="token url">[链接显示文本](http://www.google.com <span class="token string">"链接title文本"</span>)</span>这是一个直接链接http://www.google.com这是一个直接链接&lt;http://www.google.com>，这种写法防止过度引用<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>这是一个<a href="http://www.google.com" title="链接title文本" target="_blank" rel="noopener">链接显示文本</a><br>这是一个直接链接<a href="http://www.google.com" target="_blank" rel="noopener">http://www.google.com</a><br>这是一个直接链接<a href="http://www.google.com" target="_blank" rel="noopener">http://www.google.com</a>，这种写法防止过度引用</p><p>重复多次使用一个链接可以直接定义引用  </p><h3 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h3><pre class="line-numbers language-markdown"><code class="language-markdown"><span class="token url">![alt文本](https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT3caBRRBaDBug3hDSSgLFtlu5QkAE_dsc366ScpKc4ZvhilCbMDg <span class="token string">"小狗狗"</span>)</span><span class="token url">![乱写的](https://哈哈 <span class="token string">"小狗狗"</span>)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT3caBRRBaDBug3hDSSgLFtlu5QkAE_dsc366ScpKc4ZvhilCbMDg" alt="alt文本" title="小狗狗"><br><img src="https://%E5%93%88%E5%93%88" alt="乱写的" title="小狗狗"></p><h3 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/js/youtube-autoresizer.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>iframe</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>640<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>360<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://www.youtube.com/embed/HfElOZSEqn4<span class="token punctuation">"</span></span> <span class="token attr-name">frameborder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">allowfullscreen</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>iframe</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><script src="/js/youtube-autoresizer.js"></script><iframe width="640" height="360" src="https://www.youtube.com/embed/HfElOZSEqn4" frameborder="0" allowfullscreen></iframe><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><p>使用竖线分割内容，且同时使用“—”与“:”指定对齐方式</p><pre class="line-numbers language-markdown"><code class="language-markdown">| Header01 | Header02 | Header03| -------- | :------: | ---:| 默认 | 居中 | 右<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><table><thead><tr><th>Header01</th><th align="center">Header02</th><th align="right">Header03</th></tr></thead><tbody><tr><td>默认</td><td align="center">居中</td><td align="right">右</td></tr></tbody></table><p>先用Excel制作表格，再复制到<a href="http://www.tablesgenerator.com/markdown_tables" target="_blank" rel="noopener">http://www.tablesgenerator.com/markdown_tables</a> ，直接产生Markdown表格</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><h3 id="单个语法"><a href="#单个语法" class="headerlink" title="单个语法"></a>单个语法</h3><p>使用反引号 ` 来标记代码区段</p><pre class="line-numbers language-markdown"><code class="language-markdown">我是<span class="token code keyword">`code`</span>，<span class="token code keyword">`&lt;div>division&lt;/div>`</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>我是<code>code</code>，<code>&lt;div&gt;division&lt;/div&gt;</code></p><h3 id="代码段"><a href="#代码段" class="headerlink" title="代码段"></a>代码段</h3><p>使用两组每组三个反引号分单独两行将代码包围起来，并在第一组反引号后写上语言类型markdown,python即可使用语法高亮</p><pre class="line-numbers language-markdown"><code class="language-markdown">```markdowncode```<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-markdown"><code class="language-markdown">code<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-markdown"><code class="language-markdown">```markdown我是<span class="token code keyword">`code`</span>，<span class="token code keyword">`&lt;div>division&lt;/div>`</span> <span class="token comment" spellcheck="true">&lt;!--哈哈我是注释，不会在浏览器中显示。--></span>```<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-markdown"><code class="language-markdown">我是<span class="token code keyword">`code`</span>，<span class="token code keyword">`&lt;div>division&lt;/div>`</span> <span class="token comment" spellcheck="true">&lt;!--哈哈我是注释，不会在浏览器中显示。--></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Hello,world"</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token operator">//</span>循环    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="图片-1"><a href="#图片-1" class="headerlink" title="图片"></a>图片</h2><pre class="line-numbers language-markdown"><code class="language-markdown">![](1.png)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="1.png" alt></p><h2 id="公式"><a href="#公式" class="headerlink" title="公式"></a>公式</h2><p>很遗憾原生态的markdown不支持LaTeX公式，在github上也不支持，jupyter notebook上支持是有工具来转换LaTeX指令。<br>一个解决方案是用<a href="http://latex.codecogs.com/" target="_blank" rel="noopener">在线LaTeX网站</a>转化为图片再引用</p><pre class="line-numbers language-markdown"><code class="language-markdown">![](&lt;http://latex.codecogs.com/gif.latex?\frac{1}{1+sin(x)}>)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="http://latex.codecogs.com/gif.latex?%5Cfrac%7B1%7D%7B1+sin(x)%7D" alt></p><blockquote><p>注意使用<code>&lt;&gt;</code></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 编程语法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TexLive+VSCode配置</title>
      <link href="/2019/10/27/texlive-vscode-pei-zhi/"/>
      <url>/2019/10/27/texlive-vscode-pei-zhi/</url>
      
        <content type="html"><![CDATA[<h1 id="Texlive-VSCode配置"><a href="#Texlive-VSCode配置" class="headerlink" title="Texlive+VSCode配置"></a>Texlive+VSCode配置</h1><p>VSCode写代码太方便，高亮文本很舒服，比以前用的CTeX舒服，CTeX毕竟太老了，然后就换成Texlive了</p><blockquote><p>TEX Live是由国际TEX用户组（TEX Users Group，TUG）整理和发布的TEX软件发行套装，包含与TEX系统相关的各种程序、编辑与查看工具、常用宏包及文档、常用字体及多国语言支持。TEX Live是许多Linux/Unix系统默认或推荐的TEX套装，同时也支持包括Windows和Mac OS X等在内的其它操作系统。TEX Live是开发状态最为活跃的TEX发行版之一，保持着每年一版的更新频率。是免费软件。<a href="https://zh.wikipedia.org/wiki/TeX_Live" target="_blank" rel="noopener">$^1$</a></p></blockquote><h2 id="关于CTeX"><a href="#关于CTeX" class="headerlink" title="关于CTeX"></a>关于CTeX</h2><h3 id="CTeX-套装"><a href="#CTeX-套装" class="headerlink" title="CTeX 套装"></a>CTeX 套装</h3><p>CTeX 套装是科学院吴凌云研究员的个人作品。在 CTeX 套装刚刚问世之时，因其解决了繁琐的中文字体安装工作，所以广受欢迎。但是，一方面 CTeX 套装已经很久不更新，内里的宏包、工具陈旧；另一方面，随着 XeLaTeX 的发展，以及 xeCJK 等技术的成熟，上述这些繁琐的工作已经没有必要而失去意义；因此，现在不推荐使用 CTeX 套装。</p><blockquote><p>不要安装和使用 CTeX 套装！</p></blockquote><h3 id="CTeX-宏集"><a href="#CTeX-宏集" class="headerlink" title="CTeX 宏集"></a>CTeX 宏集</h3><p>虽然它的名字也是「CTeX」，但是 CTeX 宏集和 CTeX 套装是两个不同的东西。CTeX 宏集是集成了中文支持、操作系统判定、字体选择、版式预设为一体的一组宏包和文档类的合集。我们推荐在任何情况下，优先使用 CTeX 宏集处理中文。</p><blockquote><p>请在任何情况下优先使用 CTeX 宏集在 LaTeX 中处理中文！</p></blockquote><h2 id="搭建步骤"><a href="#搭建步骤" class="headerlink" title="搭建步骤"></a>搭建步骤</h2><h3 id="1-安装TeX-Live和VSCode"><a href="#1-安装TeX-Live和VSCode" class="headerlink" title="1.安装TeX Live和VSCode"></a>1.安装TeX Live和VSCode</h3><p>你可以从官方站点下载它们的安装包然后安装，点击<a href="http://mirror.ctan.org/systems/texlive/Images/texlive2019.iso" target="_blank" rel="noopener">TeX Live下载链接</a>，将会「自动选择」距离你最近的镜像下载。下载的同时<a href="/2019/10/27/vscode-an-zhuang-he-pei-zhi/" title="安装VScode">安装VScode</a>，安装都没有什么特定配置，直接默认安装就好。</p><h3 id="2-VSCode配置"><a href="#2-VSCode配置" class="headerlink" title="2.VSCode配置"></a>2.VSCode配置</h3><p>VSCode 安装完成之后，在扩展商店(打开<code>Ctrl+Shift+X</code>或者点击<img src="1.png" width="50/">安装 LaTeX Workshop 插件。<br><img src="2.png" alt></p><h3 id="3-编译Tex文件"><a href="#3-编译Tex文件" class="headerlink" title="3.编译Tex文件"></a>3.编译Tex文件</h3><p>新建文件夹，如<code>latex学习</code>，新建一个<code>.tex</code>文本，输入以下代码，</p><pre class="line-numbers language-latex"><code class="language-latex"><span class="token comment" spellcheck="true">%-*- coding: UTF-8 -*-</span><span class="token comment" spellcheck="true">% gougu.tex</span><span class="token comment" spellcheck="true">% 勾股定理</span><span class="token function selector">\documentclass</span><span class="token punctuation">[</span>UTF8<span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token keyword">ctexart</span><span class="token punctuation">}</span><span class="token function selector">\usepackage</span><span class="token punctuation">{</span><span class="token keyword">graphicx</span><span class="token punctuation">}</span><span class="token function selector">\usepackage</span><span class="token punctuation">{</span><span class="token keyword">float</span><span class="token punctuation">}</span><span class="token function selector">\usepackage</span><span class="token punctuation">{</span><span class="token keyword">amsmath</span><span class="token punctuation">}</span><span class="token function selector">\usepackage</span><span class="token punctuation">{</span><span class="token keyword">geometry</span><span class="token punctuation">}</span><span class="token function selector">\geometry</span><span class="token punctuation">{</span>a6paper,centering,scale=0.8<span class="token punctuation">}</span><span class="token function selector">\usepackage</span><span class="token punctuation">[</span>format=hang,font=small,textfont=it<span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token keyword">caption</span><span class="token punctuation">}</span><span class="token function selector">\usepackage</span><span class="token punctuation">[</span>nottoc<span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token keyword">tocbibind</span><span class="token punctuation">}</span><span class="token function selector">\newenvironment</span><span class="token punctuation">{</span>myquote<span class="token punctuation">}</span><span class="token punctuation">{</span><span class="token function selector">\begin</span><span class="token punctuation">{</span><span class="token keyword">quote</span><span class="token punctuation">}</span><span class="token function selector">\kaishu</span><span class="token function selector">\zihao</span><span class="token punctuation">{</span>-5<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">{</span><span class="token function selector">\end</span><span class="token punctuation">{</span><span class="token keyword">quote</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token function selector">\newcommand</span><span class="token function selector">\degree</span><span class="token punctuation">{</span>^<span class="token function selector">\circ</span><span class="token punctuation">}</span><span class="token function selector">\title</span><span class="token punctuation">{</span><span class="token function selector">\heiti</span> 杂谈勾股定理<span class="token punctuation">}</span><span class="token function selector">\author</span><span class="token punctuation">{</span><span class="token function selector">\kaishu</span> 纸山<span class="token punctuation">}</span><span class="token function selector">\date</span><span class="token punctuation">{</span><span class="token function selector">\today</span><span class="token punctuation">}</span><span class="token function selector">\bibliographystyle</span><span class="token punctuation">{</span>plain<span class="token punctuation">}</span><span class="token function selector">\newtheorem</span><span class="token punctuation">{</span>thm<span class="token punctuation">}</span><span class="token punctuation">{</span>定理<span class="token punctuation">}</span><span class="token function selector">\begin</span><span class="token punctuation">{</span><span class="token keyword">document</span><span class="token punctuation">}</span>    <span class="token function selector">\maketitle</span>    <span class="token function selector">\begin</span><span class="token punctuation">{</span><span class="token keyword">abstract</span><span class="token punctuation">}</span>        这是一篇关于勾股定理的小短文。    <span class="token function selector">\end</span><span class="token punctuation">{</span><span class="token keyword">abstract</span><span class="token punctuation">}</span>    <span class="token function selector">\tableofcontents</span>    <span class="token function selector">\section</span><span class="token punctuation">{</span><span class="token headline class-name">勾股定理在古代</span><span class="token punctuation">}</span><span class="token function selector">\label</span><span class="token punctuation">{</span><span class="token keyword">sec:diyijie</span><span class="token punctuation">}</span>    西方称勾股定理为毕达哥拉斯定理，将勾股定理的发现归功于公元前 6 世纪的毕达哥拉斯学派 <span class="token function selector">\cite</span><span class="token punctuation">{</span><span class="token keyword">Kline</span><span class="token punctuation">}</span>。该学派得到了一个法则，可以求出可排成直角三角形三边的三元数组。毕达哥拉斯学派没有书面著作，该定理的严格表述和证明则见于欧几里德<span class="token function selector">\footnote</span><span class="token punctuation">{</span>欧几里得，约公元前 330--275 年。<span class="token punctuation">}</span>《几何原本》的命题 47：“直角三角形斜边上的正方形等于两直角边上的两个正方形之和。 ” 证明是用面积做的。    我国《周髀算经》载商高（约公元前 12 世纪）答周公问：    <span class="token function selector">\begin</span><span class="token punctuation">{</span><span class="token keyword">myquote</span><span class="token punctuation">}</span>        勾广三，股修四，径隅五。    <span class="token function selector">\end</span><span class="token punctuation">{</span><span class="token keyword">myquote</span><span class="token punctuation">}</span>    又载陈子（约公元前 7--6 世纪）答荣方问：    <span class="token function selector">\begin</span><span class="token punctuation">{</span><span class="token keyword">myquote</span><span class="token punctuation">}</span>        若求邪至日者，以日下为勾，日高为股，勾股各自乘，并而开方除之，得邪至日。    <span class="token function selector">\end</span><span class="token punctuation">{</span><span class="token keyword">myquote</span><span class="token punctuation">}</span>    都较古希腊更早。后者已经明确道出勾股定理的一般形式。    <span class="token function selector">\section</span><span class="token punctuation">{</span><span class="token headline class-name">勾股定理的近代形式</span><span class="token punctuation">}</span>    勾股定理可以用现代语言表述如下：    <span class="token function selector">\begin</span><span class="token punctuation">{</span><span class="token keyword">thm</span><span class="token punctuation">}</span><span class="token punctuation">[</span>勾股定理<span class="token punctuation">]</span>        直角三角形斜边的平方等于两腰的平方和。    <span class="token function selector">\end</span><span class="token punctuation">{</span><span class="token keyword">thm</span><span class="token punctuation">}</span>    可以用符号语言表述为：设直角三角形<span class="token equation string">$ABC$</span>，其中<span class="token equation string">$<span class="token equation-command regex">\angle</span> C = 90<span class="token equation-command regex">\degree</span>$</span>，则有    <span class="token function selector">\begin</span><span class="token punctuation">{</span><span class="token keyword">equation</span><span class="token punctuation">}</span><span class="token equation string"><span class="token equation-command regex">\label</span>{eq:gougu}    AB^2 = BC^2 + AC^2.    </span><span class="token function selector">\end</span><span class="token punctuation">{</span><span class="token keyword">equation</span><span class="token punctuation">}</span>    满足式<span class="token function selector">\eqref</span><span class="token punctuation">{</span>eq:gougu<span class="token punctuation">}</span>的整数称为<span class="token function selector">\emph</span><span class="token punctuation">{</span>勾股数<span class="token punctuation">}</span>。第<span class="token function selector">\ref</span><span class="token punctuation">{</span><span class="token keyword">sec:diyijie</span><span class="token punctuation">}</span>节所说毕达哥拉斯学派得到的三元数组就是勾股数。下表列出一些较小的勾股数：    <span class="token function selector">\begin</span><span class="token punctuation">{</span><span class="token keyword">table</span><span class="token punctuation">}</span><span class="token punctuation">[</span>H<span class="token punctuation">]</span>        <span class="token function selector">\begin</span><span class="token punctuation">{</span><span class="token keyword">tabular</span><span class="token punctuation">}</span><span class="token punctuation">{</span>|rrr|<span class="token punctuation">}</span>            <span class="token function selector">\hline</span>            直角边 <span class="token equation string">$a$</span> <span class="token punctuation">&amp;</span> 直角边 <span class="token equation string">$b$</span> <span class="token punctuation">&amp;</span> 斜边 <span class="token equation string">$c$</span> <span class="token function selector">\\</span>            <span class="token function selector">\hline</span>            3 <span class="token punctuation">&amp;</span> 4 <span class="token punctuation">&amp;</span> 5 <span class="token function selector">\\</span>            5 <span class="token punctuation">&amp;</span> 12 <span class="token punctuation">&amp;</span> 13 <span class="token function selector">\\</span>            <span class="token function selector">\hline</span>        <span class="token function selector">\end</span><span class="token punctuation">{</span><span class="token keyword">tabular</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">%</span>        <span class="token function selector">\qquad</span>        (<span class="token equation string">$a^2 + b^2 = c^2$</span>)    <span class="token function selector">\end</span><span class="token punctuation">{</span><span class="token keyword">table</span><span class="token punctuation">}</span>    <span class="token function selector">\nocite</span><span class="token punctuation">{</span>Shiye<span class="token punctuation">}</span>    <span class="token function selector">\bibliography</span><span class="token punctuation">{</span>math<span class="token punctuation">}</span><span class="token function selector">\end</span><span class="token punctuation">{</span><span class="token keyword">document</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后<code>Ctrl+Alt+X</code>或者点击<img src="3.png" width="50/">打开LaTeX面板编译<br><img src="4.png" width="300/"><br>编译成功会会出现很多文件，其中包括<code>.pdf</code>文件，可以用以下方式方便浏览<br><img src="5.png" width="300/"></p>]]></content>
      
      
      <categories>
          
          <category> 软件安装和配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LaTeX </tag>
            
            <tag> VSCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VScode安装和配置 </title>
      <link href="/2019/10/27/vscode-an-zhuang-he-pei-zhi/"/>
      <url>/2019/10/27/vscode-an-zhuang-he-pei-zhi/</url>
      
        <content type="html"><![CDATA[<h1 id="VSCode安装和配置"><a href="#VSCode安装和配置" class="headerlink" title="VSCode安装和配置"></a>VSCode安装和配置</h1><blockquote><p>Visual Studio Code（简称VS Code）是一个由微软开发，同时支持Windows 、 Linux和macOS等操作系统且开放源代码的代码编辑器，它支持测试，并内置了Git 版本控制功能，同时也具有开发环境功能，例如代码补全（类似于 IntelliSense）、代码片段和代码重构等，该编辑器支持用户个性化配置，例如改变主题颜色、键盘快捷方式等各种属性和参数，同时还在编辑器中内置了扩展程序管理的功能。<a href="https://zh.wikipedia.org/wiki/Visual_Studio_Code" target="_blank" rel="noopener">$^1$</a></p></blockquote><p><a href="https://code.visualstudio.com/" target="_blank" rel="noopener">VS Code官网</a>，根据系统直接下载软件包安装。</p><h2 id="配置中文"><a href="#配置中文" class="headerlink" title="配置中文"></a>配置中文</h2><p>在扩展商店(打开<code>Ctrl+Shift+X</code>或者点击<img src="1.png" height="30">，搜索<code>chinese</code>，安装简体中文包<br><img src="2.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> 软件安装和配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VSCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建自己的wiki</title>
      <link href="/2019/10/27/da-jian-zi-ji-de-wiki/"/>
      <url>/2019/10/27/da-jian-zi-ji-de-wiki/</url>
      
        <content type="html"><![CDATA[<p>第一次搭建自己的Wiki，开始用的是<a href="https://xingyuzhang2018.github.io/xingyuwiki.github.io/?file=home-%E9%A6%96%E9%A1%B5" target="_blank" rel="noopener">amWiki</a>，学习了基本的markdown语法，确实简单，但是真的丑= =！，好吧，其实我开始没有觉得丑，只是显示代码的时候老是要用转义，太烦了！然后去网上搜索了别人搭的wiki和blog，特别是看了<a href="https://www.dandyweng.com/" target="_blank" rel="noopener">翁天信的主页</a>后，感觉自己被打击了，被同龄人打击到了，但是转念一想，我只是想搭一个整理自己平时的想法和知识框架的wiki，而不是分享美工的地方，我需要的只是一个外观还行的模板，然后直接填入内容就好了。</p><p>看上了Hexo，现成模板多而且简单，直接选了<a href="https://godweiyang.com/" target="_blank" rel="noopener">别人的模板</a>和<a href="https://godweiyang.com/2018/04/13/hexo-blog/#toc-heading-22" target="_blank" rel="noopener">教程</a>，默默修改了一天，开始这篇新的文章，接下来把amWiki写的移植过来好了。</p><p>想了一下，还是把评论功能开启好了，方便交流和改错。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 随笔 </tag>
            
            <tag> amWiki </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
